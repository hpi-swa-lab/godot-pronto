[gd_scene load_steps=126 format=3 uid="uid://d2mbbti3ejoy0"]

[ext_resource type="Script" path="res://addons/pronto/behaviors/ExportBehavior.gd" id="1"]
[ext_resource type="Texture2D" uid="uid://bt8mq02w33hjr" path="res://addons/pronto/assets/spritesheetScribblePlatformer.png" id="2_1rg6u"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/PlaceholderBehavior.gd" id="3_gtn40"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/PlatformerControllerBehavior.gd" id="4_hpltd"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/ValueBehavior.gd" id="5_4y5dx"]
[ext_resource type="Script" path="res://addons/pronto/helpers/ConnectionScript.gd" id="6_ofy77"]
[ext_resource type="Script" path="res://addons/pronto/helpers/Connection.gd" id="7_qfsk3"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/HealthBarBehavior.gd" id="8_0quas"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/CollisionBehavior.gd" id="9_so5y3"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/StoreBehavior.gd" id="10_wtnp8"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/SpawnerBehavior.gd" id="11_2r7rm"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/ClockBehavior.gd" id="12_r5q04"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/MoveBehavior.gd" id="13_pups5"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/AlwaysBehavior.gd" id="14_mfwpd"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/KeyBehavior.gd" id="15_2y73c"]

[sub_resource type="GDScript" id="GDScript_yljtb"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return \"jump_velocity\"
"

[sub_resource type="Resource" id="Resource_twehu"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_yljtb")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_nfgav"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return value
"

[sub_resource type="Resource" id="Resource_hr2hi"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_nfgav")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_fvaos"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_fnhn7"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_fvaos")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_2fnpj"]
script = ExtResource("7_qfsk3")
signal_name = "value_changed"
to = NodePath("../PlatformerControllerBehavior")
more_references = []
invoke = "set"
arguments = [SubResource("Resource_twehu"), SubResource("Resource_hr2hi")]
only_if = SubResource("Resource_fnhn7")
deferred = false
enabled = true

[sub_resource type="Gradient" id="Gradient_rcwrg"]
offsets = PackedFloat32Array(0, 0.5, 1)
colors = PackedColorArray(1, 0, 0, 1, 1, 1, 0, 1, 0.196078, 0.803922, 0.196078, 1)

[sub_resource type="GDScript" id="GDScript_w68et"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: CharacterBody2D):
	return true
"

[sub_resource type="Resource" id="Resource_mi62b"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_w68et")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_6j2re"]
script = ExtResource("7_qfsk3")
signal_name = "death"
to = NodePath("..")
more_references = []
invoke = "queue_free"
arguments = []
only_if = SubResource("Resource_mi62b")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_qgfdn"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return 5
"

[sub_resource type="Resource" id="Resource_a83wp"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_qgfdn")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_o6uqc"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_ge25f"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_o6uqc")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_y7m1g"]
script = ExtResource("7_qfsk3")
signal_name = "collided"
to = NodePath("../HealthBarBehavior")
more_references = []
invoke = "damage"
arguments = [SubResource("Resource_a83wp")]
only_if = SubResource("Resource_ge25f")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_w3wqo"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_c1vcs"]
image = SubResource("Image_w3wqo")

[sub_resource type="GDScript" id="GDScript_t6yyf"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D):
	return from.get_parent().global_position
"

[sub_resource type="Resource" id="Resource_plpns"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_t6yyf")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_qwqph"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_qcbnx"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_qwqph")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_5sajs"]
script = ExtResource("7_qfsk3")
signal_name = "always"
to = NodePath("../../../Enemy/MoveBehavior")
more_references = []
invoke = "move_toward"
arguments = [SubResource("Resource_plpns")]
only_if = SubResource("Resource_qcbnx")
deferred = false
enabled = true

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_rcppa"]
texture = ExtResource("2_1rg6u")
texture_region_size = Vector2i(64, 64)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
10:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:5/0 = 0
10:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:5/0/physics_layer_0/angular_velocity = 0.0
10:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:6/0 = 0
9:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:6/0/physics_layer_0/angular_velocity = 0.0
9:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:6/0 = 0
10:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:6/0/physics_layer_0/angular_velocity = 0.0
10:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
0:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
9:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:7/0 = 0
10:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:7/0/physics_layer_0/angular_velocity = 0.0
10:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:8/0 = 0
10:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:8/0/physics_layer_0/angular_velocity = 0.0
10:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
0:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
0:10/0 = 0
0:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:10/0/physics_layer_0/angular_velocity = 0.0
0:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
1:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:10/0 = 0
3:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:10/0/physics_layer_0/angular_velocity = 0.0
4:10/0 = 0
4:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:10/0/physics_layer_0/angular_velocity = 0.0
5:10/0 = 0
5:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:10/0 = 0
9:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:10/0/physics_layer_0/angular_velocity = 0.0
9:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:10/0 = 0
10:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:10/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_d183t"]
tile_size = Vector2i(64, 64)
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_rcppa")

[sub_resource type="GDScript" id="GDScript_jf3wu"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return \"horizontal_velocity\"
"

[sub_resource type="Resource" id="Resource_spnlt"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_jf3wu")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_t0cc3"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return value
"

[sub_resource type="Resource" id="Resource_tfjqb"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_t0cc3")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_fis5w"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_m5vro"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_fis5w")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_gdog8"]
script = ExtResource("7_qfsk3")
signal_name = "value_changed"
to = NodePath("../../Player/PlatformerControllerBehavior")
more_references = []
invoke = "set"
arguments = [SubResource("Resource_spnlt"), SubResource("Resource_tfjqb")]
only_if = SubResource("Resource_m5vro")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_bergc"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run():
	return 0
"

[sub_resource type="Resource" id="Resource_0mdyf"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_bergc")
argument_names = []
return_value = true

[sub_resource type="GDScript" id="GDScript_erflp"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(prop, value, text, from: Node2D, to: Label):
	return \"Score: \" + text
"

[sub_resource type="Resource" id="Resource_gju0d"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_erflp")
argument_names = ["prop", "value", "text", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_cucuq"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(prop, value, text, from: Node2D, to: Label):
	return true
"

[sub_resource type="Resource" id="Resource_7gd6f"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_cucuq")
argument_names = ["prop", "value", "text", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_vim1o"]
script = ExtResource("7_qfsk3")
signal_name = "sync"
to = NodePath("..")
more_references = []
invoke = "set_text"
arguments = [SubResource("Resource_gju0d")]
only_if = SubResource("Resource_7gd6f")
deferred = false
enabled = true

[sub_resource type="RectangleShape2D" id="RectangleShape2D_3bwcm"]
size = Vector2(1075, 47)

[sub_resource type="GDScript" id="GDScript_mbshj"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Area2D):
	return true
"

[sub_resource type="Resource" id="Resource_dx5u7"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_mbshj")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_mi3wv"]
script = ExtResource("7_qfsk3")
signal_name = "collided"
to = NodePath("..")
more_references = []
invoke = "queue_free"
arguments = []
only_if = SubResource("Resource_dx5u7")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_0b6hj"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return \"score\"
"

[sub_resource type="Resource" id="Resource_qe7vq"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_0b6hj")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_xe3nk"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return 1
"

[sub_resource type="Resource" id="Resource_q655i"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_xe3nk")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_1ede8"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_qamp0"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_1ede8")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_3y1ms"]
script = ExtResource("7_qfsk3")
signal_name = "collided"
to = NodePath("../../../ScoreLabel/StoreBehavior")
more_references = []
invoke = "inc"
arguments = [SubResource("Resource_qe7vq"), SubResource("Resource_q655i")]
only_if = SubResource("Resource_qamp0")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_0u6ux"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_lnpfb"]
image = SubResource("Image_0u6ux")

[sub_resource type="GDScript" id="GDScript_2i1aw"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return []
"

[sub_resource type="Resource" id="Resource_xqjke"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_2i1aw")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_ck6om"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_ppuqc"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_ck6om")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_33v54"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_wx2ci"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_33v54")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_ior3v"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return true
"

[sub_resource type="Resource" id="Resource_cin1h"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_ior3v")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_nehw2"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_2br76"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_nehw2")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_gsowi"]
script = ExtResource("7_qfsk3")
signal_name = "elapsed"
to = NodePath("../CoinSpawner")
more_references = []
invoke = "spawn"
arguments = [SubResource("Resource_xqjke"), SubResource("Resource_ppuqc"), SubResource("Resource_wx2ci"), SubResource("Resource_cin1h")]
only_if = SubResource("Resource_2br76")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_0oat3"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return \"duration_seconds\"
"

[sub_resource type="Resource" id="Resource_0mjje"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_0oat3")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_tjcf0"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return value
"

[sub_resource type="Resource" id="Resource_ei21h"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_tjcf0")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_ukf2h"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_fcelx"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_ukf2h")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_k20lk"]
script = ExtResource("7_qfsk3")
signal_name = "value_changed"
to = NodePath("..")
more_references = []
invoke = "set"
arguments = [SubResource("Resource_0mjje"), SubResource("Resource_ei21h")]
only_if = SubResource("Resource_fcelx")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_o63in"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_llc08"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_o63in")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_2mrrd"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_iqeb5"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_2mrrd")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_rkhuf"]
script = ExtResource("7_qfsk3")
signal_name = "elapsed"
to = NodePath("../PlaceholderBehavior")
more_references = []
invoke = "set_visible"
arguments = [SubResource("Resource_llc08")]
only_if = SubResource("Resource_iqeb5")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_oun4a"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_iqclk"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_oun4a")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_0cvxr"]
script = ExtResource("7_qfsk3")
signal_name = "elapsed"
to = NodePath("../../jumpnrun_template/Player/AlwaysBehavior")
more_references = []
invoke = "resume"
arguments = []
only_if = SubResource("Resource_iqclk")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_24ge5"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_rojlx"]
image = SubResource("Image_24ge5")

[sub_resource type="GDScript" id="GDScript_pne8t"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return \"max_velocity\"
"

[sub_resource type="Resource" id="Resource_cswp0"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_pne8t")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_g3u7k"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return value
"

[sub_resource type="Resource" id="Resource_e4mh5"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_g3u7k")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_a6qcf"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_7xlhf"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_a6qcf")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_bhsoo"]
script = ExtResource("7_qfsk3")
signal_name = "value_changed"
to = NodePath("..")
more_references = []
invoke = "set"
arguments = [SubResource("Resource_cswp0"), SubResource("Resource_e4mh5")]
only_if = SubResource("Resource_7xlhf")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_isw0g"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	if from.get_parent().global_position < to.get_parent().global_position:
		return true
"

[sub_resource type="Resource" id="Resource_htafo"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_isw0g")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_ta23e"]
script = ExtResource("7_qfsk3")
signal_name = "down"
to = NodePath("../../jumpnrun_template/Player/AlwaysBehavior")
more_references = []
invoke = "pause"
arguments = []
only_if = SubResource("Resource_htafo")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_ewl76"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	if from.get_parent().global_position > to.get_parent().global_position:
		return true
"

[sub_resource type="Resource" id="Resource_8jhrr"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_ewl76")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_jqgmt"]
script = ExtResource("7_qfsk3")
signal_name = "down"
to = NodePath("../../jumpnrun_template/Player/AlwaysBehavior")
more_references = []
invoke = "resume"
arguments = []
only_if = SubResource("Resource_8jhrr")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_eyc7f"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	if from.get_parent().global_position >= to.get_parent().global_position:
		return true
"

[sub_resource type="Resource" id="Resource_n03gh"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_eyc7f")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_2w6a3"]
script = ExtResource("7_qfsk3")
signal_name = "pressed"
to = NodePath("../../jumpnrun_template/Player/AlwaysBehavior")
more_references = []
invoke = "resume"
arguments = []
only_if = SubResource("Resource_n03gh")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_vr1q4"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	if from.get_parent().global_position < to.get_parent().global_position:
		return true
"

[sub_resource type="Resource" id="Resource_0rqhp"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_vr1q4")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_5naah"]
script = ExtResource("7_qfsk3")
signal_name = "down"
to = NodePath("../../jumpnrun_template/Player/AlwaysBehavior")
more_references = []
invoke = "resume"
arguments = []
only_if = SubResource("Resource_0rqhp")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_4nfny"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	if from.get_parent().global_position > to.get_parent().global_position:
		return true
"

[sub_resource type="Resource" id="Resource_kqha5"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_4nfny")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_scwus"]
script = ExtResource("7_qfsk3")
signal_name = "down"
to = NodePath("../../jumpnrun_template/Player/AlwaysBehavior")
more_references = []
invoke = "pause"
arguments = []
only_if = SubResource("Resource_kqha5")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_kngaw"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	if from.get_parent().global_position <= to.get_parent().global_position:
		return true
"

[sub_resource type="Resource" id="Resource_2tjwk"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_kngaw")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_i8nu3"]
script = ExtResource("7_qfsk3")
signal_name = "pressed"
to = NodePath("../../jumpnrun_template/Player/AlwaysBehavior")
more_references = []
invoke = "resume"
arguments = []
only_if = SubResource("Resource_2tjwk")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_al1aq"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return -5
"

[sub_resource type="Resource" id="Resource_2spfo"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_al1aq")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_bqbfp"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_yop3j"]
script = ExtResource("6_ofy77")
nested_script = SubResource("GDScript_bqbfp")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_fy65f"]
script = ExtResource("7_qfsk3")
signal_name = "collided"
to = NodePath("../../jumpnrun_template/Player/HealthBarBehavior")
more_references = []
invoke = "damage"
arguments = [SubResource("Resource_2spfo")]
only_if = SubResource("Resource_yop3j")
deferred = false
enabled = true

[node name="Node2D" type="Node2D"]

[node name="jumpnrun_template" type="Node2D" parent="."]

[node name="ExportBehavior" type="Node2D" parent="jumpnrun_template"]
position = Vector2(576, 324)
script = ExtResource("1")
authors = PackedStringArray("<Author>")

[node name="Player" type="CharacterBody2D" parent="jumpnrun_template" groups=["player"]]
position = Vector2(779, 537)

[node name="PlatformerControllerBehavior" type="Node2D" parent="jumpnrun_template/Player"]
position = Vector2(54, -84)
script = ExtResource("4_hpltd")

[node name="jump_velocity" type="Node2D" parent="jumpnrun_template/Player"]
position = Vector2(129, -182)
script = ExtResource("5_4y5dx")
float_min = 0.0
float_max = 1000.0
float_value = 669.0
float_step_size = 1.0
metadata/pronto_connections = [SubResource("Resource_2fnpj")]

[node name="HealthBarBehavior" type="Node2D" parent="jumpnrun_template/Player"]
position = Vector2(0, -32)
script = ExtResource("8_0quas")
progress_gradient = SubResource("Gradient_rcwrg")
metadata/pronto_connections = [SubResource("Resource_6j2re")]

[node name="EnemyCollision" type="Node2D" parent="jumpnrun_template/Player" groups=["Enemy"]]
position = Vector2(-134, -125)
script = ExtResource("9_so5y3")
limit_to_group = "Enemy"
metadata/pronto_connections = [SubResource("Resource_y7m1g")]

[node name="PlaceholderBehavior2" type="Node2D" parent="jumpnrun_template/Player"]
script = ExtResource("3_gtn40")
use_sprite = true
sprite_texture = SubResource("ImageTexture_c1vcs")
placeholder_size = Vector2(51, 65)

[node name="AlwaysBehavior" type="Node2D" parent="jumpnrun_template/Player"]
position = Vector2(-652, -505)
script = ExtResource("14_mfwpd")
paused = true
metadata/pronto_connections = [SubResource("Resource_5sajs")]

[node name="TileMap" type="TileMap" parent="jumpnrun_template"]
tile_set = SubResource("TileSet_d183t")
format = 2
layer_0/tile_data = PackedInt32Array(655359, 196608, 0, 589824, 196608, 0, 589825, 196608, 0, 589826, 196608, 0, 589827, 196608, 0, 589828, 196608, 0, 589829, 196608, 0, 589830, 196608, 0, 589831, 196608, 0, 589832, 196608, 0, 589833, 196608, 0, 589837, 196608, 0, 589838, 196608, 0, 589839, 196608, 0, 589840, 196608, 0, 589841, 196608, 0, 589842, 196608, 0, 589834, 196608, 0, 589835, 196608, 0, 589836, 196608, 0, 524306, 327680, 5, 458770, 327680, 5, 393234, 327680, 5, 589823, 327680, 5, 524287, 327680, 5, 458751, 327680, 5)

[node name="ScoreLabel" type="Label" parent="jumpnrun_template"]
offset_left = 558.0
offset_top = 16.0
offset_right = 598.0
offset_bottom = 38.3333
text = "score"

[node name="horizontal_velocity" type="Node2D" parent="jumpnrun_template/ScoreLabel"]
position = Vector2(364, 432)
script = ExtResource("5_4y5dx")
float_min = 0.0
float_max = 1000.0
float_value = 1000.0
float_step_size = 1.0
metadata/pronto_connections = [SubResource("Resource_gdog8")]

[node name="StoreBehavior" type="Node2D" parent="jumpnrun_template/ScoreLabel"]
position = Vector2(-74, 62)
script = ExtResource("10_wtnp8")
fields = {
"score": SubResource("Resource_0mdyf")
}
metadata/pronto_connections = [SubResource("Resource_vim1o")]

[node name="CoinSpawner" type="Node2D" parent="jumpnrun_template"]
position = Vector2(586, 537)
script = ExtResource("11_2r7rm")
spawn_shape_generic = SubResource("RectangleShape2D_3bwcm")
spawn_shape_color = Color(0, 0.6, 0.701961, 0.419608)

[node name="Coin" type="Area2D" parent="jumpnrun_template/CoinSpawner"]
position = Vector2(-78, -70)

[node name="Node2D" type="Node2D" parent="jumpnrun_template/CoinSpawner/Coin"]
position = Vector2(-76, -13)
script = ExtResource("9_so5y3")
limit_to_group = "player"
metadata/pronto_connections = [SubResource("Resource_mi3wv"), SubResource("Resource_3y1ms")]

[node name="PlaceholderBehavior" type="Node2D" parent="jumpnrun_template/CoinSpawner/Coin"]
script = ExtResource("3_gtn40")
color = Color(1, 1, 0, 1)
use_sprite = true
sprite_texture = SubResource("ImageTexture_lnpfb")
placeholder_size = Vector2(20, 20)

[node name="ClockBehavior" type="Node2D" parent="jumpnrun_template"]
position = Vector2(513, 584)
script = ExtResource("12_r5q04")
trigger_interval_in_seconds = 1.0
metadata/pronto_connections = [SubResource("Resource_gsowi")]

[node name="coin time interval" type="Node2D" parent="jumpnrun_template/ClockBehavior"]
position = Vector2(50, 50)
script = ExtResource("5_4y5dx")
float_min = 0.0
float_max = 10.0
float_value = 2.0
float_step_size = 0.1
metadata/pronto_connections = [SubResource("Resource_k20lk")]

[node name="Enemy" type="CharacterBody2D" parent="." groups=["Enemy"]]
position = Vector2(750, 437)

[node name="Visibility And Movement Timer" type="Node2D" parent="Enemy"]
position = Vector2(-145, -109)
script = ExtResource("12_r5q04")
cycle_count = 1
duration_seconds = 2.0
trigger_interval_in_seconds = 1.0
metadata/pronto_connections = [SubResource("Resource_rkhuf"), SubResource("Resource_0cvxr")]

[node name="PlaceholderBehavior" type="Node2D" parent="Enemy"]
visible = false
script = ExtResource("3_gtn40")
color = Color(1, 0, 0, 1)
use_sprite = true
sprite_texture = SubResource("ImageTexture_rojlx")
placeholder_size = Vector2(40, 55)

[node name="MoveBehavior" type="Node2D" parent="Enemy"]
position = Vector2(56, -105)
script = ExtResource("13_pups5")

[node name="max_velocity" type="Node2D" parent="Enemy/MoveBehavior"]
position = Vector2(50, 50)
script = ExtResource("5_4y5dx")
float_min = 0.0
float_max = 500.0
float_value = 37.0
float_step_size = 1.0
metadata/pronto_connections = [SubResource("Resource_bhsoo")]

[node name="Key A pause_unpause movement mechanism" type="Node2D" parent="Enemy"]
position = Vector2(-152, -164)
script = ExtResource("15_2y73c")
key = "A"
metadata/pronto_connections = [SubResource("Resource_ta23e"), SubResource("Resource_jqgmt"), SubResource("Resource_2w6a3")]

[node name="Key D pause_unpause movement mechanism" type="Node2D" parent="Enemy"]
position = Vector2(41, -172)
script = ExtResource("15_2y73c")
key = "D"
metadata/pronto_connections = [SubResource("Resource_5naah"), SubResource("Resource_scwus"), SubResource("Resource_i8nu3")]

[node name="PlayerCollision" type="Node2D" parent="Enemy"]
position = Vector2(144.104, 1.71843e-06)
script = ExtResource("9_so5y3")
metadata/pronto_connections = [SubResource("Resource_fy65f")]
