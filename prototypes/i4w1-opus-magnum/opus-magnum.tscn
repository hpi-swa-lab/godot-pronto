[gd_scene load_steps=82 format=3 uid="uid://clcnvsu160d7x"]

[ext_resource type="Script" path="res://addons/pronto/behaviors/Placeholder.gd" id="1_cm6jg"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/Spawner.gd" id="1_ggulk"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/VisualLine.gd" id="2_o0onj"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/Collision.gd" id="3_8q8n7"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/Always.gd" id="4_fj5vs"]
[ext_resource type="Script" path="res://addons/pronto/helpers/ConnectionScript.gd" id="5_drryg"]
[ext_resource type="Script" path="res://addons/pronto/helpers/Connection.gd" id="6_j0vsh"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/Clock.gd" id="8_7crgp"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/Controls.gd" id="9_6ntri"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/Key.gd" id="9_adfup"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_adf4g"]
size = Vector2(139, 20)

[sub_resource type="GDScript" id="GDScript_upxkl"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	to.global_rotation_degrees -= 90
"

[sub_resource type="Resource" id="Resource_qhruf"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_upxkl")
argument_names = ["other", "direction", "from", "to"]
return_value = false

[sub_resource type="GDScript" id="GDScript_5ik6j"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	var button = from.get_node(\"../..\")
	return button.get_item_text(button.selected) == \"Rotate Left\"
"

[sub_resource type="Resource" id="Resource_wkn33"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_5ik6j")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_0bc8q"]
script = ExtResource("6_j0vsh")
signal_name = "collided"
to = NodePath("../../../../Arm")
invoke = ""
arguments = []
only_if = SubResource("Resource_wkn33")
expression = SubResource("Resource_qhruf")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_h620k"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	to.global_rotation_degrees += 90
"

[sub_resource type="Resource" id="Resource_s3eim"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_h620k")
argument_names = ["other", "direction", "from", "to"]
return_value = false

[sub_resource type="GDScript" id="GDScript_1a5pw"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	var button = from.get_node(\"../..\")
	return button.get_item_text(button.selected) == \"Rotate Right\"
"

[sub_resource type="Resource" id="Resource_ep08m"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_1a5pw")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_iy2le"]
script = ExtResource("6_j0vsh")
signal_name = "collided"
to = NodePath("../../../../Arm")
invoke = ""
arguments = []
only_if = SubResource("Resource_ep08m")
expression = SubResource("Resource_s3eim")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_1kh7u"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	var molecules = to.get_overlapping_areas().filter(
		func(n): return n.is_in_group(\"molecules\")
	)
	
	if molecules.is_empty():
		return
	
	var target = molecules[0]
	target.top_level = false
	
	var after = func():
		var transform = target.global_transform
		target.get_parent().remove_child(target)
		to.get_node(\"Hand\").add_child(target)
		target.global_transform = transform
		print(\"Grab\")
	after.call_deferred()
"

[sub_resource type="Resource" id="Resource_sjaap"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_1kh7u")
argument_names = ["other", "direction", "from", "to"]
return_value = false

[sub_resource type="GDScript" id="GDScript_wmw77"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	var button = from.get_node(\"../..\")
	return button.get_item_text(button.selected) == \"Grab\"
"

[sub_resource type="Resource" id="Resource_ir8jk"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_wmw77")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_615c5"]
script = ExtResource("6_j0vsh")
signal_name = "collided"
to = NodePath("../../../../Arm")
invoke = ""
arguments = []
only_if = SubResource("Resource_ir8jk")
expression = SubResource("Resource_sjaap")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_5kxnr"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	var molecules = to.get_node(\"Hand\").get_children()
	
	if molecules.is_empty():
		return
	
	var scene_root = Utils.parent_that(to, func(n): return n.get_parent() == to.get_tree().root)
	var desk = scene_root.get_node(\"%Desk\")
	var target = molecules[0]
	
	var transform = target.global_transform
	target.get_parent().remove_child(target)
	desk.add_child(target)
	target.global_transform = transform
	
	print(\"Release\")
"

[sub_resource type="Resource" id="Resource_5exp8"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_5kxnr")
argument_names = ["other", "direction", "from", "to"]
return_value = false

[sub_resource type="GDScript" id="GDScript_5kvj3"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	var button = from.get_node(\"../..\")
	return button.get_item_text(button.selected) == \"Release\"
"

[sub_resource type="Resource" id="Resource_0k3b1"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_5kvj3")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_wnkei"]
script = ExtResource("6_j0vsh")
signal_name = "collided"
to = NodePath("../../../../Arm")
invoke = ""
arguments = []
only_if = SubResource("Resource_0k3b1")
expression = SubResource("Resource_5exp8")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_55yuf"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	var scene_root = Utils.parent_that(to, func(n): return n.get_parent() == to.get_tree().root)
	var marker = scene_root.get_node(\"%PositionMarker\")
	to.global_position = marker.global_position
	marker.global_position.y -= to.size.y
	pass
"

[sub_resource type="Resource" id="Resource_r3ddd"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_55yuf")
argument_names = ["from", "to"]
return_value = false

[sub_resource type="GDScript" id="GDScript_ooe7x"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return true
"

[sub_resource type="Resource" id="Resource_xdxx2"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_ooe7x")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_i2stt"]
script = ExtResource("6_j0vsh")
signal_name = "elapsed"
to = NodePath("..")
invoke = ""
arguments = []
only_if = SubResource("Resource_xdxx2")
expression = SubResource("Resource_r3ddd")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_3byhk"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return true
"

[sub_resource type="Resource" id="Resource_wwf0n"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_3byhk")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_48wsb"]
script = ExtResource("6_j0vsh")
signal_name = "just_down"
to = NodePath("..")
invoke = "spawn"
arguments = []
only_if = SubResource("Resource_wwf0n")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_38tvg"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(pos, from, to):
	return pos
"

[sub_resource type="Resource" id="Resource_n0xh1"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_38tvg")
argument_names = ["pos", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_c52v6"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(pos, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_a3vq3"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_c52v6")
argument_names = ["pos", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_nvdc5"]
script = ExtResource("6_j0vsh")
signal_name = "mouse_move"
to = NodePath("..")
invoke = "set_global_position"
arguments = [SubResource("Resource_n0xh1")]
only_if = SubResource("Resource_a3vq3")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_xkt1u"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(pos, button, from, to):
	var collisions = to.get_overlapping_areas()
	if collisions.is_empty():
		return
	var object = collisions[0]
	G.put(\"dragged_object\", object)
	G.put(\"drag_offset\", object.global_position - to.global_position)
	
"

[sub_resource type="Resource" id="Resource_miwlu"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_xkt1u")
argument_names = ["pos", "button", "from", "to"]
return_value = false

[sub_resource type="GDScript" id="GDScript_mevrv"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(pos, button, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_3leq4"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_mevrv")
argument_names = ["pos", "button", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_y2rje"]
script = ExtResource("6_j0vsh")
signal_name = "mouse_down"
to = NodePath("..")
invoke = ""
arguments = []
only_if = SubResource("Resource_3leq4")
expression = SubResource("Resource_miwlu")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_045le"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(pos, button, duration, from):
	G.put(\"dragged_object\", null)
"

[sub_resource type="Resource" id="Resource_0th1a"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_045le")
argument_names = ["pos", "button", "duration", "from"]
return_value = false

[sub_resource type="GDScript" id="GDScript_1dpya"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(pos, button, duration, from):
	return true
"

[sub_resource type="Resource" id="Resource_vyggr"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_1dpya")
argument_names = ["pos", "button", "duration", "from"]
return_value = true

[sub_resource type="Resource" id="Resource_lat1y"]
script = ExtResource("6_j0vsh")
signal_name = "mouse_up"
to = NodePath("")
invoke = ""
arguments = []
only_if = SubResource("Resource_vyggr")
expression = SubResource("Resource_0th1a")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_icjps"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(pos, from):
	var object = G.at(\"dragged_object\")
	if object != null:
		object.global_position = from.get_parent().global_position + G.at(\"drag_offset\")
"

[sub_resource type="Resource" id="Resource_mm61c"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_icjps")
argument_names = ["pos", "from"]
return_value = false

[sub_resource type="GDScript" id="GDScript_pg4bc"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(pos, from):
	return true
"

[sub_resource type="Resource" id="Resource_unph2"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_pg4bc")
argument_names = ["pos", "from"]
return_value = true

[sub_resource type="Resource" id="Resource_xg0fg"]
script = ExtResource("6_j0vsh")
signal_name = "mouse_move"
to = NodePath("")
invoke = ""
arguments = []
only_if = SubResource("Resource_unph2")
expression = SubResource("Resource_mm61c")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_dnach"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return true
"

[sub_resource type="Resource" id="Resource_gvf71"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_dnach")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_1w5qb"]
script = ExtResource("6_j0vsh")
signal_name = "elapsed"
to = NodePath("../ArmSpawner")
invoke = "spawn"
arguments = []
only_if = SubResource("Resource_gvf71")
deferred = false
enabled = true

[sub_resource type="CircleShape2D" id="CircleShape2D_qw4sk"]

[sub_resource type="GDScript" id="GDScript_82m0q"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return to.get_node(\"../Cursor\").global_position
"

[sub_resource type="Resource" id="Resource_g8dfc"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_82m0q")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_geng5"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return true
"

[sub_resource type="Resource" id="Resource_0cwou"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_geng5")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_otehx"]
script = ExtResource("6_j0vsh")
signal_name = "just_down"
to = NodePath("..")
invoke = "spawn_at"
arguments = [SubResource("Resource_g8dfc")]
only_if = SubResource("Resource_0cwou")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_ttvov"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from, to):
	var marker = to.get_node(\"%PositionMarker\")
	to.global_position.x = max(10 / 2, min(to.get_viewport().size.x - 10 / 2, to.global_position.x))
	to.global_position.y = marker.global_position.y + 10
"

[sub_resource type="Resource" id="Resource_pbkvm"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_ttvov")
argument_names = ["delta", "from", "to"]
return_value = false

[sub_resource type="GDScript" id="GDScript_unnqu"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_06xy3"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_unnqu")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_rn47k"]
script = ExtResource("6_j0vsh")
signal_name = "always"
to = NodePath("..")
invoke = ""
arguments = []
only_if = SubResource("Resource_06xy3")
expression = SubResource("Resource_pbkvm")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_12ds5"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	var molecules = to.get_overlapping_areas().filter(
		func(n: Node):
			return n.is_in_group(\"molecules\")
	)

	print(\"Hello\")
	if molecules.size() != 2:
		return

	var A = molecules[0]
	var B = molecules[1]
	if B.get_parent().name != \"Desk\" or B == G.at(\"dragged_object\"):
		A = B
		B = molecules[0]
	
	for atom in B.get_children():
		var transform = atom.global_transform
		B.remove_child(atom)
		A.add_child(atom)
		atom.global_transform = transform
	B.queue_free()

"

[sub_resource type="Resource" id="Resource_vplfd"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_12ds5")
argument_names = ["other", "direction", "from", "to"]
return_value = false

[sub_resource type="GDScript" id="GDScript_yutko"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_s2dky"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_yutko")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_1v4n2"]
script = ExtResource("6_j0vsh")
signal_name = "collided"
to = NodePath("..")
invoke = ""
arguments = []
only_if = SubResource("Resource_s2dky")
expression = SubResource("Resource_vplfd")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_lh4a1"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return true
"

[sub_resource type="Resource" id="Resource_rq0hp"]
script = ExtResource("5_drryg")
nested_script = SubResource("GDScript_lh4a1")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_6akkc"]
script = ExtResource("6_j0vsh")
signal_name = "just_down"
to = NodePath("..")
invoke = "spawn_at"
arguments = [SubResource("Resource_g8dfc")]
only_if = SubResource("Resource_rq0hp")
deferred = false
enabled = true

[node name="Node2D" type="Node2D"]

[node name="ArmSpawner" type="Node2D" parent="."]
position = Vector2(186, 199)
script = ExtResource("1_ggulk")

[node name="Robot" type="Node2D" parent="ArmSpawner"]

[node name="Arm" type="Area2D" parent="ArmSpawner/Robot"]

[node name="Hand" type="Node2D" parent="ArmSpawner/Robot/Arm"]
position = Vector2(100, 0)
script = ExtResource("1_cm6jg")
label = "Hand"
keep_in_origin = false

[node name="Collision" type="Node2D" parent="ArmSpawner/Robot/Arm"]
position = Vector2(29, 52)
script = ExtResource("3_8q8n7")
metadata/pronto_connections = []

[node name="Base" type="Node2D" parent="ArmSpawner/Robot/Arm"]
script = ExtResource("1_cm6jg")
label = "Base"

[node name="VisualLine" type="Node2D" parent="ArmSpawner/Robot/Arm/Base" node_paths=PackedStringArray("from", "to")]
show_behind_parent = true
z_index = -10
script = ExtResource("2_o0onj")
from = NodePath("..")
to = NodePath("../../Hand")
line_width = 10

[node name="Program" type="HBoxContainer" parent="ArmSpawner/Robot"]
offset_left = -52.0
offset_top = 140.0
offset_right = 128.0
offset_bottom = 171.0

[node name="Label" type="Label" parent="ArmSpawner/Robot/Program"]
layout_mode = 2
text = "   "

[node name="Label2" type="Label" parent="ArmSpawner/Robot/Program"]
layout_mode = 2
text = "Arm"

[node name="Label3" type="Label" parent="ArmSpawner/Robot/Program"]
layout_mode = 2
text = "   "

[node name="Instruction" type="OptionButton" parent="ArmSpawner/Robot/Program"]
layout_mode = 2
mouse_filter = 1
item_count = 5
selected = 0
popup/item_0/text = "Nop"
popup/item_0/id = 0
popup/item_1/text = "Rotate Left"
popup/item_1/id = 1
popup/item_2/text = "Rotate Right"
popup/item_2/id = 2
popup/item_3/text = "Grab"
popup/item_3/id = 3
popup/item_4/text = "Release"
popup/item_4/id = 4

[node name="Trigger" type="Area2D" parent="ArmSpawner/Robot/Program/Instruction"]
position = Vector2(0, 28.0285)
collision_layer = 8
collision_mask = 8

[node name="CollisionShape2D" type="CollisionShape2D" parent="ArmSpawner/Robot/Program/Instruction/Trigger"]
position = Vector2(69.5, 16.0285)
shape = SubResource("RectangleShape2D_adf4g")

[node name="Collision" type="Node2D" parent="ArmSpawner/Robot/Program/Instruction/Trigger"]
position = Vector2(1.00001, -91.0285)
script = ExtResource("3_8q8n7")
metadata/pronto_connections = [SubResource("Resource_0bc8q"), SubResource("Resource_iy2le"), SubResource("Resource_615c5"), SubResource("Resource_wnkei")]

[node name="Clock" type="Node2D" parent="ArmSpawner/Robot/Program"]
position = Vector2(-30, -68)
script = ExtResource("8_7crgp")
one_shot = true
duration_seconds = 0.0001
trigger_interval_in_seconds = 1.0
metadata/pronto_connections = [SubResource("Resource_i2stt")]

[node name="Key" type="Node2D" parent="ArmSpawner"]
position = Vector2(-48, 7)
script = ExtResource("9_adfup")
key = "A"
metadata/pronto_connections = [SubResource("Resource_48wsb")]

[node name="Cursor" type="Area2D" parent="."]
position = Vector2(445, 72)

[node name="Placeholder" type="Node2D" parent="Cursor"]
visible = false
script = ExtResource("1_cm6jg")
placeholder_size = Vector2(10, 10)

[node name="Controls" type="Node2D" parent="Cursor"]
position = Vector2(-23, 38)
script = ExtResource("9_6ntri")
metadata/pronto_connections = [SubResource("Resource_nvdc5"), SubResource("Resource_y2rje"), SubResource("Resource_lat1y"), SubResource("Resource_xg0fg")]

[node name="Clock" type="Node2D" parent="."]
position = Vector2(273, 68)
script = ExtResource("8_7crgp")
one_shot = true
duration_seconds = 0.0001
trigger_interval_in_seconds = 1.0
metadata/pronto_connections = [SubResource("Resource_1w5qb")]

[node name="Hydrogen" type="Node2D" parent="." node_paths=PackedStringArray("container")]
position = Vector2(488, 215)
script = ExtResource("1_ggulk")
container = NodePath("../Desk")

[node name="Molecule" type="Area2D" parent="Hydrogen" groups=["molecules"]]

[node name="Atom" type="CollisionShape2D" parent="Hydrogen/Molecule"]
shape = SubResource("CircleShape2D_qw4sk")

[node name="Polygon2D" type="Polygon2D" parent="Hydrogen/Molecule/Atom"]
show_behind_parent = true
color = Color(0.423529, 1, 1, 1)
polygon = PackedVector2Array(-7, -7, -10, 0, -6, 8, 0, 10, 6, 8, 10, 0, 8, -6, 0, -10)

[node name="Key" type="Node2D" parent="Hydrogen"]
position = Vector2(21, 89)
script = ExtResource("9_adfup")
key = "H"
metadata/pronto_connections = [SubResource("Resource_otehx")]

[node name="ProgramCounter" type="Area2D" parent="."]
position = Vector2(-4, 573)
collision_layer = 9
collision_mask = 8

[node name="Placeholder" type="Node2D" parent="ProgramCounter"]
position = Vector2(0, 500)
script = ExtResource("1_cm6jg")
placeholder_size = Vector2(10, 1000)
keep_in_origin = false

[node name="Always" type="Node2D" parent="ProgramCounter"]
position = Vector2(165, 28)
script = ExtResource("4_fj5vs")
metadata/pronto_connections = [SubResource("Resource_rn47k")]

[node name="Desk" type="Node2D" parent="."]
unique_name_in_owner = true

[node name="Merger" type="Area2D" parent="."]
position = Vector2(163, 104)

[node name="Placeholder" type="Node2D" parent="Merger"]
script = ExtResource("1_cm6jg")
label = "Merger"
placeholder_size = Vector2(39, 8)

[node name="Collision" type="Node2D" parent="Merger"]
position = Vector2(-15, 48)
script = ExtResource("3_8q8n7")
limit_to_group = "molecules"
metadata/pronto_connections = [SubResource("Resource_1v4n2")]

[node name="PositionMarker" type="Marker2D" parent="."]
unique_name_in_owner = true
position = Vector2(0, 601)

[node name="Oxygen" type="Node2D" parent="." node_paths=PackedStringArray("container")]
position = Vector2(725, 388)
script = ExtResource("1_ggulk")
container = NodePath("../Desk")

[node name="Molecule" type="Area2D" parent="Oxygen" groups=["molecules"]]

[node name="Atom" type="CollisionShape2D" parent="Oxygen/Molecule"]
shape = SubResource("CircleShape2D_qw4sk")

[node name="Polygon2D" type="Polygon2D" parent="Oxygen/Molecule/Atom"]
show_behind_parent = true
color = Color(0.929412, 0.870588, 0.976471, 1)
polygon = PackedVector2Array(-7, -7, -10, 0, -6, 8, 0, 10, 6, 8, 10, 0, 8, -6, 0, -10)

[node name="Key" type="Node2D" parent="Oxygen"]
position = Vector2(21, 89)
script = ExtResource("9_adfup")
key = "O"
metadata/pronto_connections = [SubResource("Resource_6akkc")]
