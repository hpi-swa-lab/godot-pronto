[gd_scene load_steps=122 format=3 uid="uid://c5jx7mchewi4s"]

[ext_resource type="Script" path="res://addons/pronto/behaviors/ExportBehavior.gd" id="1"]
[ext_resource type="Texture2D" uid="uid://bt8mq02w33hjr" path="res://addons/pronto/assets/spritesheetScribblePlatformer.png" id="2_cgm6p"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/PlaceholderBehavior.gd" id="3_b6245"]
[ext_resource type="Script" path="res://prototypes/game-baerlachTest/Player.gd" id="3_k48k7"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/PlatformerControllerBehavior.gd" id="4_go8mi"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/ValueBehavior.gd" id="5_b3xa0"]
[ext_resource type="Script" path="res://addons/pronto/helpers/ConnectionScript.gd" id="6_k7dyv"]
[ext_resource type="Script" path="res://addons/pronto/helpers/Connection.gd" id="7_kgdkp"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/HealthBarBehavior.gd" id="8_crmqq"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/CollisionBehavior.gd" id="9_2wlo0"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/StoreBehavior.gd" id="10_t1a6g"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/SpawnerBehavior.gd" id="11_pbjrp"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/ClockBehavior.gd" id="12_d4gs4"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/MoveBehavior.gd" id="13_8xiej"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/AlwaysBehavior.gd" id="14_87r7w"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_rcppa"]
texture = ExtResource("2_cgm6p")
texture_region_size = Vector2i(64, 64)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
10:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:5/0 = 0
10:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:5/0/physics_layer_0/angular_velocity = 0.0
10:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:6/0 = 0
9:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:6/0/physics_layer_0/angular_velocity = 0.0
9:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:6/0 = 0
10:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:6/0/physics_layer_0/angular_velocity = 0.0
10:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
0:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
9:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:7/0 = 0
10:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:7/0/physics_layer_0/angular_velocity = 0.0
10:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:8/0 = 0
10:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:8/0/physics_layer_0/angular_velocity = 0.0
10:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
0:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
0:10/0 = 0
0:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:10/0/physics_layer_0/angular_velocity = 0.0
0:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
1:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:10/0 = 0
3:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:10/0/physics_layer_0/angular_velocity = 0.0
4:10/0 = 0
4:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:10/0/physics_layer_0/angular_velocity = 0.0
5:10/0 = 0
5:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:10/0 = 0
9:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:10/0/physics_layer_0/angular_velocity = 0.0
9:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:10/0 = 0
10:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:10/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_d183t"]
tile_size = Vector2i(64, 64)
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_rcppa")

[sub_resource type="Image" id="Image_8vlfu"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_c1vcs"]
image = SubResource("Image_8vlfu")

[sub_resource type="GDScript" id="GDScript_yljtb"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return \"jump_velocity\"
"

[sub_resource type="Resource" id="Resource_twehu"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_yljtb")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_nfgav"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return value
"

[sub_resource type="Resource" id="Resource_hr2hi"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_nfgav")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_fvaos"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_fnhn7"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_fvaos")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_2fnpj"]
script = ExtResource("7_kgdkp")
signal_name = "value_changed"
to = NodePath("..")
more_references = []
invoke = "set"
arguments = [SubResource("Resource_twehu"), SubResource("Resource_hr2hi")]
only_if = SubResource("Resource_fnhn7")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_jf3wu"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return \"horizontal_velocity\"
"

[sub_resource type="Resource" id="Resource_spnlt"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_jf3wu")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_t0cc3"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return value
"

[sub_resource type="Resource" id="Resource_tfjqb"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_t0cc3")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_fis5w"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_m5vro"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_fis5w")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_gdog8"]
script = ExtResource("7_kgdkp")
signal_name = "value_changed"
to = NodePath("..")
more_references = []
invoke = "set"
arguments = [SubResource("Resource_spnlt"), SubResource("Resource_tfjqb")]
only_if = SubResource("Resource_m5vro")
deferred = false
enabled = true

[sub_resource type="Gradient" id="Gradient_rcwrg"]
offsets = PackedFloat32Array(0, 0.5, 1)
colors = PackedColorArray(1, 0, 0, 1, 1, 1, 0, 1, 0.196078, 0.803922, 0.196078, 1)

[sub_resource type="GDScript" id="GDScript_w68et"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: CharacterBody2D):
	return true
"

[sub_resource type="Resource" id="Resource_mi62b"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_w68et")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_6j2re"]
script = ExtResource("7_kgdkp")
signal_name = "death"
to = NodePath("..")
more_references = []
invoke = "queue_free"
arguments = []
only_if = SubResource("Resource_mi62b")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_2lkuv"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: CharacterBody2D):
	return 2.5
"

[sub_resource type="Resource" id="Resource_odqdv"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_2lkuv")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_cxb5i"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: CharacterBody2D):
	return true
"

[sub_resource type="Resource" id="Resource_vanie"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_cxb5i")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_g80ty"]
script = ExtResource("7_kgdkp")
signal_name = "collided"
to = NodePath("..")
more_references = []
invoke = "set_camera_zoom"
arguments = [SubResource("Resource_odqdv")]
only_if = SubResource("Resource_vanie")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_xyeay"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: CharacterBody2D):
	return true
"

[sub_resource type="Resource" id="Resource_owigy"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_xyeay")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_u7mqc"]
script = ExtResource("7_kgdkp")
signal_name = "collided"
to = NodePath("../../../treasure")
more_references = []
invoke = "queue_free"
arguments = []
only_if = SubResource("Resource_owigy")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_p0exk"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: CharacterBody2D):
	return true
"

[sub_resource type="Resource" id="Resource_qrv1t"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_p0exk")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_q6hax"]
script = ExtResource("7_kgdkp")
signal_name = "collided"
to = NodePath("../../../Key1")
more_references = []
invoke = "queue_free"
arguments = []
only_if = SubResource("Resource_qrv1t")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_byhky"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: CharacterBody2D):
	return true
"

[sub_resource type="Resource" id="Resource_8huyr"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_byhky")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_3wbn5"]
script = ExtResource("7_kgdkp")
signal_name = "collided"
to = NodePath("..")
more_references = []
invoke = "add_key1"
arguments = []
only_if = SubResource("Resource_8huyr")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_bergc"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run():
	return 0
"

[sub_resource type="Resource" id="Resource_0mdyf"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_bergc")
argument_names = []
return_value = true

[sub_resource type="GDScript" id="GDScript_erflp"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(prop, value, text, from: Node2D, to: Label):
	return \"Score: \" + text
"

[sub_resource type="Resource" id="Resource_gju0d"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_erflp")
argument_names = ["prop", "value", "text", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_cucuq"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(prop, value, text, from: Node2D, to: Label):
	return true
"

[sub_resource type="Resource" id="Resource_7gd6f"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_cucuq")
argument_names = ["prop", "value", "text", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_vim1o"]
script = ExtResource("7_kgdkp")
signal_name = "sync"
to = NodePath("..")
more_references = []
invoke = "set_text"
arguments = [SubResource("Resource_gju0d")]
only_if = SubResource("Resource_7gd6f")
deferred = false
enabled = true

[sub_resource type="RectangleShape2D" id="RectangleShape2D_3bwcm"]
size = Vector2(1075, 47)

[sub_resource type="GDScript" id="GDScript_mbshj"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Area2D):
	return true
"

[sub_resource type="Resource" id="Resource_dx5u7"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_mbshj")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_mi3wv"]
script = ExtResource("7_kgdkp")
signal_name = "collided"
to = NodePath("..")
more_references = []
invoke = "queue_free"
arguments = []
only_if = SubResource("Resource_dx5u7")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_0b6hj"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return \"score\"
"

[sub_resource type="Resource" id="Resource_qe7vq"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_0b6hj")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_xe3nk"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return 1
"

[sub_resource type="Resource" id="Resource_q655i"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_xe3nk")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_1ede8"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_qamp0"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_1ede8")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_3y1ms"]
script = ExtResource("7_kgdkp")
signal_name = "collided"
to = NodePath("../../../ScoreLabel/StoreBehavior")
more_references = []
invoke = "inc"
arguments = [SubResource("Resource_qe7vq"), SubResource("Resource_q655i")]
only_if = SubResource("Resource_qamp0")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_qurqa"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_lnpfb"]
image = SubResource("Image_qurqa")

[sub_resource type="GDScript" id="GDScript_2i1aw"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return []
"

[sub_resource type="Resource" id="Resource_xqjke"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_2i1aw")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_ck6om"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_ppuqc"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_ck6om")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_33v54"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_wx2ci"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_33v54")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_ior3v"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from, to):
	return true
"

[sub_resource type="Resource" id="Resource_cin1h"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_ior3v")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_nehw2"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_2br76"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_nehw2")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_gsowi"]
script = ExtResource("7_kgdkp")
signal_name = "elapsed"
to = NodePath("../CoinSpawner")
more_references = []
invoke = "spawn"
arguments = [SubResource("Resource_xqjke"), SubResource("Resource_ppuqc"), SubResource("Resource_wx2ci"), SubResource("Resource_cin1h")]
only_if = SubResource("Resource_2br76")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_0oat3"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return \"duration_seconds\"
"

[sub_resource type="Resource" id="Resource_0mjje"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_0oat3")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_tjcf0"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return value
"

[sub_resource type="Resource" id="Resource_ei21h"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_tjcf0")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_ukf2h"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_fcelx"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_ukf2h")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_k20lk"]
script = ExtResource("7_kgdkp")
signal_name = "value_changed"
to = NodePath("..")
more_references = []
invoke = "set"
arguments = [SubResource("Resource_0mjje"), SubResource("Resource_ei21h")]
only_if = SubResource("Resource_fcelx")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_pildk"]
data = {
"data": PackedByteArray
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_kqe45"]
image = SubResource("Image_pildk")

[sub_resource type="GDScript" id="GDScript_0jluo"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_00rjc"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_0jluo")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_svk5d"]
script = ExtResource("7_kgdkp")
signal_name = "always"
to = NodePath("..")
more_references = []
invoke = "move_right"
arguments = []
only_if = SubResource("Resource_00rjc")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_wrv8i"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return \"max_velocity\"
"

[sub_resource type="Resource" id="Resource_6bk7o"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_wrv8i")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_esrxi"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return value
"

[sub_resource type="Resource" id="Resource_fs404"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_esrxi")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_ypdsg"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(value, from, to):
	return true
"

[sub_resource type="Resource" id="Resource_jhm3x"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_ypdsg")
argument_names = ["value", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_n5u7t"]
script = ExtResource("7_kgdkp")
signal_name = "value_changed"
to = NodePath("..")
more_references = []
invoke = "set"
arguments = [SubResource("Resource_6bk7o"), SubResource("Resource_fs404")]
only_if = SubResource("Resource_jhm3x")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_7hiq5"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return 10
"

[sub_resource type="Resource" id="Resource_c0d1d"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_7hiq5")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_3i784"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return true
"

[sub_resource type="Resource" id="Resource_tim14"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_3i784")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_etonf"]
script = ExtResource("7_kgdkp")
signal_name = "collided"
to = NodePath("../../jumpnrun_template/Player/HealthBarBehavior")
more_references = []
invoke = "damage"
arguments = [SubResource("Resource_c0d1d")]
only_if = SubResource("Resource_tim14")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_cdl6s"]
data = {
"data": PackedByteArray
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_d0kef"]
image = SubResource("Image_cdl6s")

[sub_resource type="Image" id="Image_a0dj3"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_yq0og"]
image = SubResource("Image_a0dj3")

[sub_resource type="Image" id="Image_6gi1a"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_xyi3n"]
image = SubResource("Image_6gi1a")

[sub_resource type="Image" id="Image_787y6"]
data = {
"data": PackedByteArray
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_k1pwx"]
image = SubResource("Image_787y6")

[sub_resource type="Image" id="Image_t18rh"]
data = {
"data": PackedByteArray
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_lsrxa"]
image = SubResource("Image_t18rh")

[sub_resource type="GDScript" id="GDScript_fbat7"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D, ref0: CharacterBody2D):
	return ref0.position
"

[sub_resource type="Resource" id="Resource_0nep6"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_fbat7")
argument_names = ["delta", "from", "to", "ref0"]
return_value = true

[sub_resource type="GDScript" id="GDScript_y5mwl"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D, ref0: CharacterBody2D):
	return true
"

[sub_resource type="Resource" id="Resource_avo80"]
script = ExtResource("6_k7dyv")
nested_script = SubResource("GDScript_y5mwl")
argument_names = ["delta", "from", "to", "ref0"]
return_value = true

[sub_resource type="Resource" id="Resource_11rln"]
script = ExtResource("7_kgdkp")
signal_name = "always"
to = NodePath("../MoveBehavior")
more_references = [NodePath("../../jumpnrun_template/Player")]
invoke = "move_toward"
arguments = [SubResource("Resource_0nep6")]
only_if = SubResource("Resource_avo80")
deferred = false
enabled = true

[node name="Node2D" type="Node2D"]

[node name="ExportBehavior" type="Node2D" parent="."]
script = ExtResource("1")
authors = PackedStringArray("<Author>")

[node name="jumpnrun_template" type="Node2D" parent="."]

[node name="TileMap" type="TileMap" parent="jumpnrun_template"]
tile_set = SubResource("TileSet_d183t")
format = 2
layer_0/tile_data = PackedInt32Array(655359, 327680, 5, 589824, 327680, 5, 589825, 327680, 5, 589826, 327680, 5, 589827, 327680, 5, 589828, 327680, 5, 589829, 327680, 5, 589830, 327680, 5, 589831, 327680, 5, 589832, 327680, 5, 589833, 327680, 5, 589837, 327680, 5, 589838, 327680, 5, 589839, 327680, 5, 589840, 327680, 5, 589841, 327680, 5, 589842, 327680, 5, 589834, 327680, 5, 589835, 327680, 5, 589836, 327680, 5, 327696, 327680, 5, 327697, 327680, 5, 589843, 327680, 5, 589844, 327680, 5, 589845, 327680, 5, 589846, 327680, 5, 589847, 327680, 5, 589848, 327680, 5, 589849, 327680, 5, 589850, 327680, 5, 589851, 327680, 5, 589852, 327680, 5, 589853, 327680, 5, 589854, 327680, 5, 589855, 327680, 5, 458773, 327680, 5, 393237, 327680, 5, 327701, 327680, 5, 262165, 327680, 5, 196629, 327680, 5, 131093, 327680, 5, 65557, 327680, 5, 589856, 327680, 5, 589857, 327680, 5, 589858, 327680, 5, 589859, 327680, 5, 589860, 327680, 5, 589861, 327680, 5, 589862, 327680, 5, 589863, 327680, 5, 589864, 327680, 5, 589865, 327680, 5, 458793, 327680, 5, 393257, 327680, 5, 327721, 327680, 5, 262185, 327680, 5, 196649, 327680, 5, 131113, 327680, 5, 65577, 327680, 5, 41, 327680, 5, -65495, 327680, 5, -131031, 327680, 5, -196567, 327680, 5, -196568, 327680, 5, -196569, 327680, 5, -196570, 327680, 5, -196571, 327680, 5, -196572, 327680, 5, -196573, 327680, 5, -196574, 327680, 5, -196575, 327680, 5, -196576, 327680, 5, -196577, 327680, 5, -196578, 327680, 5, -196579, 327680, 5, -196580, 327680, 5, -196581, 327680, 5, -196582, 327680, 5, -196583, 327680, 5, -196584, 327680, 5, -196585, 327680, 5, -196586, 327680, 5, -196587, 327680, 5, -131051, 327680, 5, -65515, 327680, 5, 21, 327680, 5, 262166, 327680, 5, 262167, 327680, 5, 262168, 327680, 5, 393254, 327680, 5, 393255, 327680, 5, 393256, 327680, 5, 262177, 327680, 5, 262178, 327680, 5, 262179, 327680, 5, 131103, 327680, 5, 131102, 327680, 5, 131101, 327680, 5, 589866, 327680, 5, 589867, 327680, 5, 589868, 327680, 5, 589869, 327680, 5, 589870, 327680, 5, 589871, 327680, 5, 589872, 327680, 5, 589873, 327680, 5, 589874, 327680, 5, 589875, 327680, 5, 589876, 327680, 5, 589877, 327680, 5, 589878, 327680, 5, 589879, 327680, 5, 589880, 327680, 5, 589881, 327680, 5, 589882, 327680, 5, 589883, 327680, 5, 589884, 327680, 5, 589885, 327680, 5, 589886, 327680, 5, 458814, 327680, 5, 393278, 327680, 5, 327742, 327680, 5, 262206, 327680, 5, 196670, 327680, 5, 131134, 327680, 5, 65598, 327680, 5, 62, 327680, 5, -65474, 327680, 5, -131010, 327680, 5, -196546, 327680, 5, -262103, 327680, 5, -327639, 327680, 5, -393175, 327680, 5, -458711, 327680, 5, -524247, 327680, 5, -786391, 327680, 5, -786390, 327680, 5, -786389, 327680, 5, -786388, 327680, 5, -786387, 327680, 5, -786386, 327680, 5, -786385, 327680, 5, -786384, 327680, 5, -786383, 327680, 5, -786382, 327680, 5, -786381, 327680, 5, -786380, 327680, 5, -786379, 327680, 5, -786378, 327680, 5, -786377, 327680, 5, -786376, 327680, 5, -786375, 327680, 5, -786374, 327680, 5, -786373, 327680, 5, -786372, 327680, 5, -786371, 327680, 5, -786370, 327680, 5, -720834, 327680, 5, -655298, 327680, 5, -589762, 327680, 5, -524226, 327680, 5, -458690, 327680, 5, -393154, 327680, 5, -327618, 327680, 5, -262082, 327680, 5, -720855, 327680, 5, -655319, 327680, 5, -589783, 327680, 5)

[node name="Player" type="CharacterBody2D" parent="jumpnrun_template" groups=["player"]]
position = Vector2(832, 514)
script = ExtResource("3_k48k7")

[node name="PlaceholderBehavior" type="Node2D" parent="jumpnrun_template/Player"]
script = ExtResource("3_b6245")
use_sprite = true
sprite_texture = SubResource("ImageTexture_c1vcs")
placeholder_size = Vector2(51, 65)

[node name="PlatformerControllerBehavior" type="Node2D" parent="jumpnrun_template/Player"]
position = Vector2(54, -84)
script = ExtResource("4_go8mi")

[node name="jump_velocity" type="Node2D" parent="jumpnrun_template/Player/PlatformerControllerBehavior"]
position = Vector2(87, 19)
script = ExtResource("5_b3xa0")
float_min = 0.0
float_max = 1000.0
float_value = 650.0
float_step_size = 1.0
metadata/pronto_connections = [SubResource("Resource_2fnpj")]

[node name="horizontal_velocity" type="Node2D" parent="jumpnrun_template/Player/PlatformerControllerBehavior"]
position = Vector2(50, 50)
script = ExtResource("5_b3xa0")
float_min = 0.0
float_max = 1000.0
float_value = 581.0
float_step_size = 1.0
metadata/pronto_connections = [SubResource("Resource_gdog8")]

[node name="HealthBarBehavior" type="Node2D" parent="jumpnrun_template/Player"]
position = Vector2(0, -32)
script = ExtResource("8_crmqq")
progress_gradient = SubResource("Gradient_rcwrg")
metadata/pronto_connections = [SubResource("Resource_6j2re")]

[node name="Camera2D" type="Camera2D" parent="jumpnrun_template/Player"]
ignore_rotation = false
zoom = Vector2(1.5, 1.5)

[node name="treasureCollision" type="Node2D" parent="jumpnrun_template/Player"]
position = Vector2(-73, -119)
script = ExtResource("9_2wlo0")
limit_to_group = "treasure"
metadata/pronto_connections = [SubResource("Resource_g80ty"), SubResource("Resource_u7mqc")]

[node name="Key1Collsion" type="Node2D" parent="jumpnrun_template/Player"]
position = Vector2(-83, -192)
script = ExtResource("9_2wlo0")
limit_to_group = "key1"
metadata/pronto_connections = [SubResource("Resource_q6hax"), SubResource("Resource_3wbn5")]

[node name="ScoreLabel" type="Label" parent="jumpnrun_template"]
offset_left = 558.0
offset_top = 16.0
offset_right = 598.0
offset_bottom = 38.3333
text = "score"
metadata/_edit_use_anchors_ = true

[node name="StoreBehavior" type="Node2D" parent="jumpnrun_template/ScoreLabel"]
position = Vector2(-74, 62)
script = ExtResource("10_t1a6g")
fields = {
"score": SubResource("Resource_0mdyf")
}
metadata/pronto_connections = [SubResource("Resource_vim1o")]

[node name="CoinSpawner" type="Node2D" parent="jumpnrun_template"]
position = Vector2(586, 537)
script = ExtResource("11_pbjrp")
spawn_shape_generic = SubResource("RectangleShape2D_3bwcm")
spawn_shape_color = Color(0, 0.6, 0.701961, 0.419608)

[node name="Coin" type="Area2D" parent="jumpnrun_template/CoinSpawner"]
position = Vector2(-73, -94)

[node name="Node2D" type="Node2D" parent="jumpnrun_template/CoinSpawner/Coin"]
position = Vector2(-76, -13)
script = ExtResource("9_2wlo0")
limit_to_group = "player"
metadata/pronto_connections = [SubResource("Resource_mi3wv"), SubResource("Resource_3y1ms")]

[node name="PlaceholderBehavior" type="Node2D" parent="jumpnrun_template/CoinSpawner/Coin"]
script = ExtResource("3_b6245")
color = Color(1, 1, 0, 1)
use_sprite = true
sprite_texture = SubResource("ImageTexture_lnpfb")
placeholder_size = Vector2(20, 20)

[node name="ClockBehavior" type="Node2D" parent="jumpnrun_template"]
position = Vector2(513, 584)
script = ExtResource("12_d4gs4")
trigger_interval_in_seconds = 1.0
metadata/pronto_connections = [SubResource("Resource_gsowi")]

[node name="coin time interval" type="Node2D" parent="jumpnrun_template/ClockBehavior"]
position = Vector2(50, 50)
script = ExtResource("5_b3xa0")
float_min = 0.0
float_max = 10.0
float_value = 0.0
float_step_size = 0.1
metadata/pronto_connections = [SubResource("Resource_k20lk")]

[node name="enemy1" type="CharacterBody2D" parent="." groups=["enemy"]]
position = Vector2(20, 503)

[node name="PlaceholderBehavior" type="Node2D" parent="enemy1"]
script = ExtResource("3_b6245")
color = Color(1, 0.215686, 1, 1)
use_sprite = true
sprite_texture = SubResource("ImageTexture_kqe45")
placeholder_size = Vector2(96, 79)

[node name="MoveBehavior" type="Node2D" parent="enemy1"]
position = Vector2(-62.1631, -2.71724e-06)
script = ExtResource("13_8xiej")

[node name="AlwaysBehavior" type="Node2D" parent="enemy1/MoveBehavior"]
position = Vector2(-28.2843, 28.2843)
script = ExtResource("14_87r7w")
metadata/pronto_connections = [SubResource("Resource_svk5d")]

[node name="enemy_max_velocity" type="Node2D" parent="enemy1/MoveBehavior"]
position = Vector2(50, 50)
script = ExtResource("5_b3xa0")
float_min = 0.0
float_max = 500.0
float_value = 37.0
float_step_size = 1.0
metadata/pronto_connections = [SubResource("Resource_n5u7t")]

[node name="EnemyCollision" type="Node2D" parent="enemy1"]
position = Vector2(650, -134)
script = ExtResource("9_2wlo0")
limit_to_group = "player"
metadata/pronto_connections = [SubResource("Resource_etonf")]

[node name="treasure" type="CharacterBody2D" parent="." groups=["treasure"]]
position = Vector2(1726, 533)

[node name="PlaceholderBehavior" type="Node2D" parent="treasure" groups=["treasure"]]
script = ExtResource("3_b6245")
color = Color(1, 1, 0.105882, 1)
use_sprite = true
sprite_texture = SubResource("ImageTexture_d0kef")
placeholder_size = Vector2(50, 50)

[node name="Blocker" type="CharacterBody2D" parent="."]
position = Vector2(1377, 545)
collision_layer = 0
collision_mask = 0

[node name="PlaceholderBehavior" type="Node2D" parent="Blocker"]
script = ExtResource("3_b6245")
use_sprite = true
sprite_texture = SubResource("ImageTexture_yq0og")
placeholder_size = Vector2(60, 60)

[node name="Door1" type="CharacterBody2D" parent="."]
position = Vector2(2655, 543)
collision_layer = 0
collision_mask = 0

[node name="PlaceholderBehavior" type="Node2D" parent="Door1"]
script = ExtResource("3_b6245")
use_sprite = true
sprite_texture = SubResource("ImageTexture_xyi3n")
placeholder_size = Vector2(80, 60)

[node name="Key1" type="CharacterBody2D" parent="." groups=["key1"]]
position = Vector2(1441, 226)

[node name="PlaceholderBehavior" type="Node2D" parent="Key1" groups=["key1"]]
script = ExtResource("3_b6245")
color = Color(0.537255, 1, 0.25098, 1)
use_sprite = true
sprite_texture = SubResource("ImageTexture_k1pwx")
placeholder_size = Vector2(40, 40)

[node name="enemy2" type="CharacterBody2D" parent="."]
position = Vector2(560, 230)

[node name="PlaceholderBehavior" type="Node2D" parent="enemy2"]
script = ExtResource("3_b6245")
color = Color(0.0901961, 1, 1, 1)
use_sprite = true
sprite_texture = SubResource("ImageTexture_lsrxa")
placeholder_size = Vector2(80, 80)

[node name="AlwaysBehavior" type="Node2D" parent="enemy2"]
position = Vector2(49, 6)
script = ExtResource("14_87r7w")
paused = true
metadata/pronto_connections = [SubResource("Resource_11rln")]

[node name="MoveBehavior" type="Node2D" parent="enemy2"]
position = Vector2(106, 24)
script = ExtResource("13_8xiej")
