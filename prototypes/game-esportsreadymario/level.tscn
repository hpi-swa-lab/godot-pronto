[gd_scene load_steps=93 format=3 uid="uid://b4ijhemwpli7a"]

[ext_resource type="Script" path="res://addons/pronto/helpers/Behavior.gd" id="1_0anxu"]
[ext_resource type="Texture2D" uid="uid://bt8mq02w33hjr" path="res://addons/pronto/assets/spritesheetScribblePlatformer.png" id="2_o557j"]
[ext_resource type="Script" path="res://prototypes/game-esportsreadymario/Player.gd" id="3_djl10"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/PlaceholderBehavior.gd" id="3_ltwte"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/PlatformerControllerBehavior.gd" id="5_e5nx4"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/ValueBehavior.gd" id="6_pgotb"]
[ext_resource type="Script" path="res://addons/pronto/helpers/ConnectionScript.gd" id="7_m8xtl"]
[ext_resource type="Script" path="res://addons/pronto/helpers/Connection.gd" id="8_w4gg1"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/HealthBarBehavior.gd" id="9_2lwuh"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/CollisionBehavior.gd" id="10_suj8j"]
[ext_resource type="Script" path="res://prototypes/game-esportsreadymario/single_spawn.gd" id="11_4pwkp"]
[ext_resource type="Material" uid="uid://b5akcj0c3kh4w" path="res://addons/pronto/icons/icon_outline_material.tres" id="11_mdex1"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/AlwaysBehavior.gd" id="12_2uwir"]
[ext_resource type="Script" path="res://addons/pronto/behaviors/SpawnerBehavior.gd" id="12_i5xdw"]
[ext_resource type="PackedScene" uid="uid://co3kc6g87njiy" path="res://addons/pronto/helpers/GroupDrawer.tscn" id="13_cp8el"]
[ext_resource type="Texture2D" uid="uid://bhos8bn4u0qp8" path="res://addons/pronto/icons/MissingTexture.svg" id="14_cx67i"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_rcppa"]
texture = ExtResource("2_o557j")
texture_region_size = Vector2i(64, 64)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
10:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:5/0 = 0
10:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:5/0/physics_layer_0/angular_velocity = 0.0
10:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:6/0 = 0
9:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:6/0/physics_layer_0/angular_velocity = 0.0
9:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:6/0 = 0
10:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:6/0/physics_layer_0/angular_velocity = 0.0
10:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
0:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
9:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:7/0 = 0
10:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:7/0/physics_layer_0/angular_velocity = 0.0
10:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:8/0 = 0
10:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:8/0/physics_layer_0/angular_velocity = 0.0
10:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
0:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
0:10/0 = 0
0:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:10/0/physics_layer_0/angular_velocity = 0.0
0:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
1:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:10/0 = 0
3:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:10/0/physics_layer_0/angular_velocity = 0.0
4:10/0 = 0
4:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:10/0/physics_layer_0/angular_velocity = 0.0
5:10/0 = 0
5:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
9:10/0 = 0
9:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:10/0/physics_layer_0/angular_velocity = 0.0
9:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
10:10/0 = 0
10:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:10/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_d183t"]
tile_size = Vector2i(64, 64)
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_rcppa")

[sub_resource type="Image" id="Image_1a5wo"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_c1vcs"]
image = SubResource("Image_1a5wo")

[sub_resource type="Gradient" id="Gradient_rcwrg"]
offsets = PackedFloat32Array(0, 0.5, 1)
colors = PackedColorArray(1, 0, 0, 1, 1, 1, 0, 1, 0.196078, 0.803922, 0.196078, 1)

[sub_resource type="GDScript" id="GDScript_krpkc"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(from: Node2D, to: CharacterBody2D):
	return true
"

[sub_resource type="Resource" id="Resource_r06fl"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_krpkc")
argument_names = ["from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_rmc47"]
script = ExtResource("8_w4gg1")
signal_name = "death"
to = NodePath("..")
more_references = []
invoke = "reset"
arguments = []
only_if = SubResource("Resource_r06fl")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_m41p4"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	return []
"

[sub_resource type="Resource" id="Resource_6oh7j"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_m41p4")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_dlf23"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_6nekn"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_dlf23")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_dgwt3"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_6aepa"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_dgwt3")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_qfb7o"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from, to):
	return false
"

[sub_resource type="Resource" id="Resource_p7odq"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_qfb7o")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_ruga6"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	if other == to.get_node(\"..\") && not other.has_spawned:
		other.has_spawned = true
		return true
	return false
"

[sub_resource type="Resource" id="Resource_h7fnw"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_ruga6")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_3pk7o"]
script = ExtResource("8_w4gg1")
signal_name = "collided"
to = NodePath("../../Area2D/SpawnerBehavior")
more_references = []
invoke = "spawn"
arguments = [SubResource("Resource_6oh7j"), SubResource("Resource_6nekn"), SubResource("Resource_6aepa"), SubResource("Resource_p7odq")]
only_if = SubResource("Resource_h7fnw")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_5clmq"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return []
"

[sub_resource type="Resource" id="Resource_pcdkg"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_5clmq")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_1l307"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_iaeyn"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_1l307")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_mj3ro"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_0go6e"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_mj3ro")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_tdfxj"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return false
"

[sub_resource type="Resource" id="Resource_ctife"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_tdfxj")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_r5cr0"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	if other == to.get_node(\"..\") && not other.has_spawned:
		other.has_spawned = true
		return true
	return false
"

[sub_resource type="Resource" id="Resource_jkvbu"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_r5cr0")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_xckuc"]
script = ExtResource("8_w4gg1")
signal_name = "collided"
to = NodePath("../../Area2D3/SpawnerBehavior")
more_references = []
invoke = "spawn"
arguments = [SubResource("Resource_pcdkg"), SubResource("Resource_iaeyn"), SubResource("Resource_0go6e"), SubResource("Resource_ctife")]
only_if = SubResource("Resource_jkvbu")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_pm7mo"]
data = {
"data": PackedByteArray(255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 10, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 10, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 54, 252, 127, 127, 251, 253, 128, 128, 112, 255, 255, 255, 0, 253, 129, 129, 113, 252, 127, 127, 251, 255, 130, 130, 53, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 132, 132, 27, 255, 137, 137, 13, 255, 255, 255, 0, 255, 132, 132, 31, 252, 128, 128, 196, 252, 129, 129, 73, 255, 255, 255, 0, 252, 128, 128, 74, 252, 128, 128, 196, 255, 128, 128, 30, 255, 255, 255, 0, 255, 137, 137, 13, 255, 132, 132, 27, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 10, 252, 128, 128, 246, 253, 127, 127, 191, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 14, 253, 129, 129, 125, 252, 128, 128, 220, 253, 129, 129, 125, 255, 128, 128, 14, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 192, 252, 127, 127, 245, 255, 128, 128, 10, 255, 255, 255, 0, 255, 255, 255, 1, 252, 128, 128, 144, 253, 128, 128, 96, 255, 128, 128, 14, 253, 129, 129, 125, 252, 128, 128, 238, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 128, 128, 238, 253, 129, 129, 125, 255, 128, 128, 14, 253, 128, 128, 98, 252, 127, 127, 143, 255, 255, 255, 1, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 14, 252, 128, 128, 132, 252, 128, 128, 238, 252, 127, 127, 255, 252, 127, 127, 237, 253, 129, 129, 123, 255, 132, 132, 27, 253, 129, 129, 123, 252, 127, 127, 237, 252, 127, 127, 255, 252, 128, 128, 238, 252, 128, 128, 132, 255, 128, 128, 14, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 158, 252, 127, 127, 255, 252, 127, 127, 255, 253, 127, 127, 181, 255, 137, 137, 13, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 137, 137, 13, 253, 128, 128, 182, 252, 127, 127, 255, 252, 127, 127, 255, 252, 128, 128, 158, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 166, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 253, 127, 127, 187, 255, 128, 128, 58, 255, 255, 255, 0, 255, 128, 128, 60, 253, 127, 127, 187, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 128, 128, 166, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 160, 252, 127, 127, 255, 253, 129, 129, 89, 253, 127, 127, 185, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 253, 128, 128, 186, 253, 128, 128, 90, 252, 127, 127, 255, 252, 128, 128, 160, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 160, 252, 127, 127, 255, 255, 128, 128, 32, 255, 255, 255, 0, 255, 130, 130, 57, 252, 127, 127, 255, 252, 127, 127, 255, 252, 128, 128, 198, 255, 130, 130, 59, 255, 255, 255, 0, 255, 128, 128, 32, 252, 127, 127, 255, 252, 128, 128, 160, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 160, 252, 127, 127, 255, 255, 128, 128, 32, 255, 255, 255, 0, 255, 255, 255, 0, 253, 128, 128, 96, 252, 127, 127, 255, 253, 128, 128, 96, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 32, 252, 127, 127, 255, 252, 128, 128, 160, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 160, 252, 127, 127, 255, 252, 127, 127, 133, 255, 128, 128, 14, 255, 255, 255, 0, 253, 128, 128, 96, 252, 127, 127, 255, 253, 128, 128, 96, 255, 255, 255, 0, 255, 128, 128, 14, 252, 127, 127, 133, 252, 127, 127, 255, 252, 128, 128, 160, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 253, 128, 128, 92, 252, 127, 127, 237, 252, 127, 127, 255, 252, 128, 128, 238, 253, 129, 129, 125, 253, 128, 128, 110, 252, 127, 127, 255, 253, 128, 128, 110, 253, 129, 129, 125, 252, 128, 128, 238, 252, 127, 127, 255, 252, 127, 127, 237, 253, 128, 128, 92, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 137, 137, 13, 253, 129, 129, 123, 252, 127, 127, 237, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 237, 253, 129, 129, 123, 255, 137, 137, 13, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 137, 137, 13, 253, 129, 129, 123, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 253, 129, 129, 123, 255, 137, 137, 13, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 137, 137, 13, 253, 129, 129, 91, 255, 137, 137, 13, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_hvlcf"]
image = SubResource("Image_pm7mo")

[sub_resource type="GDScript" id="GDScript_xsbtr"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from, to):
	return at(\"PlayerDamage\")
"

[sub_resource type="Resource" id="Resource_3gb1y"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_xsbtr")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_r8o5w"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D):
	var timer = from.get_node(\"../Timer\")
	if not timer.is_stopped():
		return false
	var hitbox = from.get_node(\"..\")
	var hitplayer = to.get_node(\"..\")
	var bodies = hitbox.get_overlapping_bodies()
	for body in bodies:
		if body.is_in_group(\"player\") && not body == hitplayer:
			timer.start()
			return true
	return false
"

[sub_resource type="Resource" id="Resource_mrs7r"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_r8o5w")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_xodg6"]
script = ExtResource("8_w4gg1")
signal_name = "always"
to = NodePath("../../HealthBarBehavior")
more_references = []
invoke = "damage"
arguments = [SubResource("Resource_3gb1y")]
only_if = SubResource("Resource_mrs7r")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_heuyv"]
data = {
"data": PackedByteArray(255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 94, 94, 127, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 93, 93, 255, 255, 94, 94, 127, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 94, 94, 127, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 94, 94, 127, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 231, 255, 94, 94, 54, 255, 94, 94, 57, 255, 93, 93, 233, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 231, 255, 94, 94, 54, 255, 94, 94, 57, 255, 93, 93, 233, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 97, 97, 42, 255, 255, 255, 0, 255, 255, 255, 0, 255, 97, 97, 42, 255, 93, 93, 233, 255, 93, 93, 232, 255, 93, 93, 41, 255, 255, 255, 0, 255, 255, 255, 0, 255, 97, 97, 42, 255, 93, 93, 233, 255, 93, 93, 232, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 96, 96, 45, 255, 93, 93, 44, 255, 255, 255, 0, 255, 97, 97, 42, 255, 97, 97, 42, 255, 255, 255, 0, 255, 96, 96, 45, 255, 93, 93, 44, 255, 255, 255, 0, 255, 97, 97, 42, 255, 97, 97, 42, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 96, 96, 45, 255, 93, 93, 235, 255, 94, 94, 234, 255, 95, 95, 43, 255, 255, 255, 0, 255, 255, 255, 0, 255, 96, 96, 45, 255, 93, 93, 235, 255, 94, 94, 234, 255, 95, 95, 43, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 235, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 233, 255, 95, 95, 59, 255, 96, 96, 61, 255, 93, 93, 235, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 233, 255, 95, 95, 59, 255, 96, 96, 61, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 93, 93, 255, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_6jgov"]
image = SubResource("Image_heuyv")

[sub_resource type="GDScript" id="GDScript_q1yi1"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return []
"

[sub_resource type="Resource" id="Resource_el8pb"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_q1yi1")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_jotwn"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_b2acp"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_jotwn")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_dy4t0"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return Vector2(INF,INF)
"

[sub_resource type="Resource" id="Resource_h4xyv"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_dy4t0")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_1tui2"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return false
"

[sub_resource type="Resource" id="Resource_i1wcg"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_1tui2")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_lolul"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	if other == to.get_node(\"..\") && not other.has_spawned:
		other.has_spawned = true
		return true
	return false
"

[sub_resource type="Resource" id="Resource_4difr"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_lolul")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_dxacu"]
script = ExtResource("8_w4gg1")
signal_name = "collided"
to = NodePath("../../Area2D3/SpawnerBehavior")
more_references = []
invoke = "spawn"
arguments = [SubResource("Resource_el8pb"), SubResource("Resource_b2acp"), SubResource("Resource_h4xyv"), SubResource("Resource_i1wcg")]
only_if = SubResource("Resource_4difr")
deferred = false
enabled = true

[sub_resource type="Image" id="Image_aqo8q"]
data = {
"data": PackedByteArray(249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 255, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0, 249, 250, 251, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_2awq2"]
image = SubResource("Image_aqo8q")

[sub_resource type="Image" id="Image_6oqde"]
data = {
"data": PackedByteArray(255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 34, 252, 128, 128, 170, 252, 127, 127, 231, 252, 127, 127, 231, 252, 127, 127, 169, 255, 131, 131, 33, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 48, 252, 128, 128, 244, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 243, 255, 130, 130, 45, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 1, 252, 128, 128, 218, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 213, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 62, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 255, 130, 130, 57, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 4, 252, 127, 127, 137, 252, 128, 128, 238, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 237, 252, 127, 127, 135, 255, 170, 170, 3, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 134, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 131, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 226, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 225, 255, 255, 255, 0, 255, 255, 255, 0, 252, 127, 127, 225, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 225, 255, 255, 255, 0, 255, 255, 255, 0, 252, 127, 127, 129, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 127, 127, 255, 252, 128, 128, 128, 255, 255, 255, 0, 255, 255, 255, 0, 255, 128, 128, 4, 252, 128, 128, 130, 252, 127, 127, 225, 252, 128, 128, 252, 252, 128, 128, 252, 252, 128, 128, 252, 252, 127, 127, 253, 252, 127, 127, 253, 252, 128, 128, 254, 252, 128, 128, 254, 252, 127, 127, 255, 252, 127, 127, 229, 252, 128, 128, 132, 255, 128, 128, 4, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 127, 127, 193, 253, 127, 127, 189, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 127, 127, 193, 253, 128, 128, 190, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 192, 253, 128, 128, 188, 255, 255, 255, 0, 255, 255, 255, 0, 252, 127, 127, 193, 253, 127, 127, 189, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 192, 253, 128, 128, 188, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 252, 128, 128, 192, 253, 128, 128, 188, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_aeu4d"]
image = SubResource("Image_6oqde")

[sub_resource type="Image" id="Image_lfrrd"]
data = {
"data": PackedByteArray
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id="ImageTexture_oxx44"]
image = SubResource("Image_lfrrd")

[sub_resource type="GDScript" id="GDScript_1g6uj"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from, to):
	return 100
"

[sub_resource type="Resource" id="Resource_tjqpp"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_1g6uj")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_hkhl0"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D):
	var player = to.get_node(\"..\")
	var item = from.get_node(\"..\")
	var bodies = item.get_colliding_bodies()
	print(player, item, bodies)
	for body in bodies:
		if body == player:
			item.queue_free()
			return true
	return false
"

[sub_resource type="Resource" id="Resource_ouwsd"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_hkhl0")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_m1nrh"]
script = ExtResource("8_w4gg1")
signal_name = "always"
to = NodePath("../../../../Player1/HealthBarBehavior")
more_references = []
invoke = "set_health"
arguments = [SubResource("Resource_tjqpp")]
only_if = SubResource("Resource_ouwsd")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_mgjx0"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D):
	return 100
"

[sub_resource type="Resource" id="Resource_x12g1"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_mgjx0")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_iy41y"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(delta, from: Node2D, to: Node2D):
	var player = to.get_node(\"..\")
	var item = from.get_node(\"..\")
	var bodies = item.get_colliding_bodies()
	print(player, item, bodies)
	for body in bodies:
		if body == player:
			item.queue_free()
			return true
	return false
"

[sub_resource type="Resource" id="Resource_nwebd"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_iy41y")
argument_names = ["delta", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_btlro"]
script = ExtResource("8_w4gg1")
signal_name = "always"
to = NodePath("../../../../Player2/HealthBarBehavior")
more_references = []
invoke = "set_health"
arguments = [SubResource("Resource_x12g1")]
only_if = SubResource("Resource_nwebd")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_g44sq"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return 0
"

[sub_resource type="Resource" id="Resource_jh0yp"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_g44sq")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_0o0oi"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return not to == null && other == to.get_node(\"..\")
"

[sub_resource type="Resource" id="Resource_u82t1"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_0o0oi")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_fyp7b"]
script = ExtResource("8_w4gg1")
signal_name = "collided"
to = NodePath("../../Player2/HealthBarBehavior")
more_references = []
invoke = "set_health"
arguments = [SubResource("Resource_jh0yp")]
only_if = SubResource("Resource_u82t1")
deferred = false
enabled = true

[sub_resource type="GDScript" id="GDScript_eo8xy"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return 0
"

[sub_resource type="Resource" id="Resource_wmwdb"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_eo8xy")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="GDScript" id="GDScript_wx1hm"]
script/source = "@tool
extends U
@warning_ignore(\"unused_parameter\")
func run(other, direction, from: Node2D, to: Node2D):
	return not to == null && other == to.get_node(\"..\")
"

[sub_resource type="Resource" id="Resource_c5n8a"]
script = ExtResource("7_m8xtl")
nested_script = SubResource("GDScript_wx1hm")
argument_names = ["other", "direction", "from", "to"]
return_value = true

[sub_resource type="Resource" id="Resource_j8tfr"]
script = ExtResource("8_w4gg1")
signal_name = "collided"
to = NodePath("../../Player1/HealthBarBehavior")
more_references = []
invoke = "set_health"
arguments = [SubResource("Resource_wmwdb")]
only_if = SubResource("Resource_c5n8a")
deferred = false
enabled = true

[node name="jumpnrun_template" type="Node2D"]

[node name="_Node2D_19608" type="Node2D" parent="."]
script = ExtResource("1_0anxu")

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_d183t")
format = 2
layer_0/tile_data = PackedInt32Array(655359, 196608, 0, 589824, 196608, 0, 589825, 196608, 0, 589826, 196608, 0, 589827, 196608, 0, 589828, 196608, 0, 589829, 196608, 0, 589830, 196608, 0, 589831, 196608, 0, 589832, 196608, 0, 589833, 196608, 0, 589834, 196608, 0, 589835, 196608, 0, 589836, 196608, 0, 589851, 196608, 0, 589853, 196608, 0, 589854, 196608, 0, 589855, 196608, 0, 589856, 196608, 0, 589857, 196608, 0, 589858, 196608, 0, 589859, 196608, 0, 589860, 196608, 0, 589861, 196608, 0, 589862, 196608, 0, 589863, 196608, 0, 589864, 196608, 0, 589865, 196608, 0, 589866, 196608, 0, 524330, 196608, 0, 524331, 196608, 0, 524332, 196608, 0, 589867, 196608, 0, 589868, 196608, 0, 589869, 196608, 0, 589879, 196608, 0, 589880, 196608, 0, 589881, 196608, 0, 589882, 196608, 0, 589883, 196608, 0, 589884, 196608, 0, 589892, 196608, 0, 589893, 196608, 0, 589894, 196608, 0, 589895, 196608, 0, 589896, 196608, 0, 589897, 196608, 0, 589913, 196608, 0, 589914, 196608, 0, 589915, 196608, 0, 589919, 196608, 0, 589920, 196608, 0, 589921, 196608, 0, 589922, 196608, 0, 589923, 196608, 0, 589924, 196608, 0, 589925, 196608, 0, 589926, 196608, 0, 589927, 196608, 0, 589928, 196608, 0, 589929, 196608, 0, 589930, 196608, 0, 589931, 196608, 0, 589932, 196608, 0, 589933, 196608, 0, 589934, 196608, 0, 589935, 196608, 0, 589936, 196608, 0, 589937, 196608, 0, 589938, 196608, 0, 589939, 196608, 0, 589940, 196608, 0, 589941, 196608, 0, 589942, 196608, 0, 524406, 196608, 0, 589943, 196608, 0, 589944, 196608, 0, 589945, 196608, 0, 589946, 196608, 0, 589947, 196608, 0, 589948, 196608, 0, 589949, 196608, 0, 589950, 196608, 0, 589951, 196608, 0, 589952, 196608, 0, 589953, 196608, 0, 589954, 196608, 0, 589823, 196608, 0, 524287, 196608, 0, 458751, 196608, 0, 393215, 196608, 0, 327679, 196608, 0, 262143, 196608, 0, 196607, 196608, 0, 131071, 196608, 0, 65535, 196608, 0, -1, 196608, 0, -65537, 196608, 0, -131073, 196608, 0, -196609, 196608, 0, -262145, 196608, 0, -327681, 196608, 0, -393217, 196608, 0, -458753, 196608, 0, -524289, 196608, 0, -589825, 196608, 0, -589826, 196608, 0, 524418, 196608, 0, 458882, 196608, 0, 393346, 196608, 0, 327810, 196608, 0, 327809, 196608, 0, 262273, 196608, 0, 196737, 196608, 0, 196736, 196608, 0, 131200, 196608, 0, 65664, 196608, 0, 128, 196608, 0, -65408, 196608, 0, -130944, 196608, 0, -196480, 196608, 0, -262016, 196608, 0, -327552, 196608, 0, -393088, 196608, 0, -458624, 196608, 0, -524160, 196608, 0, -589696, 196608, 0, -655232, 196608, 0, -720768, 196608, 0, 524297, 196608, 0, 458761, 196608, 0, 458762, 196608, 0, 524298, 196608, 0, 524299, 196608, 0, 458763, 196608, 0, 393227, 196608, 0, 327691, 196608, 0, 262156, 196608, 0, 327692, 196608, 0, 393228, 196608, 0, 458764, 196608, 0, 524300, 196608, 0, 589852, 196608, 0, 589918, 196608, 0, 589917, 196608, 0, 589916, 196608, 0, 524377, 196608, 0, 458841, 196608, 0, 393305, 196608, 0, 327769, 196608, 0, 262233, 196608, 0, 327770, 196608, 0, 393306, 196608, 0, 458842, 196608, 0, 524378, 196608, 0, 458843, 196608, 0, 524379, 196608, 0, 458844, 196608, 0, 524380, 196608, 0, 524381, 196608, 0, 327732, 196608, 0, 393268, 196608, 0, 458804, 196608, 0, 524340, 196608, 0, 524333, 196608, 0, 589876, 196608, 0, 262155, 196608, 0, 458760, 196608, 0, 458759, 196608, 0, 524295, 196608, 0, 524296, 196608, 0, 393226, 196608, 0, 327690, 196608, 0, 262154, 196608, 0, 589870, 196608, 0, 589871, 196608, 0, 589872, 196608, 0, 589873, 196608, 0, 589874, 196608, 0, 589875, 196608, 0, 589877, 196608, 0, 589878, 196608, 0, 589886, 196608, 0, 655422, 196608, 0, 655423, 196608, 0, 655424, 196608, 0, 655425, 196608, 0, 655426, 196608, 0, 655427, 196608, 0, 589891, 196608, 0, 589890, 196608, 0, 589889, 196608, 0, 589888, 196608, 0, 589887, 196608, 0, 524291, 196608, 0, 458755, 196608, 0, 524385, 196608, 0, 458849, 196608, 0, 524390, 196608, 0, 524389, 196608, 0, 458853, 196608, 0, 393317, 196608, 0, 327781, 196608, 0, 262245, 196608, 0, 196709, 196608, 0, 131173, 196608, 0, 65637, 196608, 0, 101, 196608, 0, -65435, 196608, 0, -130971, 196608, 0, -196507, 196608, 0, -262043, 196608, 0, -327579, 196608, 0, -393115, 196608, 0, -458651, 196608, 0, -524187, 196608, 0, -589723, 196608, 0, -655259, 196608, 0, -720795, 196608, 0, -786331, 196608, 0, -851867, 196608, 0, -917403, 196608, 0, 458845, 196608, 0, 262234, 196608, 0, 262232, 196608, 0, 327768, 196608, 0, 393304, 196608, 0, 458840, 196608, 0, 524376, 196608, 0, 589912, 196608, 0, -65464, 196608, 0, 72, 196608, 0, 65608, 196608, 0, 131144, 196608, 0, 196680, 196608, 0, -131000, 196608, 0, -196536, 196608, 0, -262072, 196608, 0, 196636, 196608, 0, 131100, 196608, 0, 65564, 196608, 0, 28, 196608, 0, -65508, 196608, 0, -131044, 196608, 0, -196580, 196608, 0, -262116, 196608, 0, 65574, 196608, 0, 65575, 196608, 0, 65576, 196608, 0, -196563, 196608, 0, -196562, 196608, 0, -196561, 196608, 0, 65601, 196608, 0, 65602, 196608, 0, 65603, 196608, 0, -196550, 196608, 0, -196549, 196608, 0, -196548, 196608, 0, -196547, 196608, 0, -458683, 196608, 0, -458682, 196608, 0, -458681, 196608, 0, -458680, 196608, 0, -393144, 196608, 0, -327608, 196608, 0, -458724, 196608, 0, -393188, 196608, 0, -327652, 196608, 0, 589885, 196608, 0, 393260, 196608, 0, 393261, 196608, 0, 458797, 196608, 0, 458796, 196608, 0, 393274, 196608, 0, 458810, 196608, 0, 458811, 196608, 0, 393275, 196608, 0, 524346, 196608, 0, 524347, 196608, 0, 524348, 196608, 0, 524349, 196608, 0, 524350, 196608, 0, 327731, 196608, 0, 393267, 196608, 0, 458803, 196608, 0, 524339, 196608, 0, 131128, 196608, 0, 131129, 196608, 0, 131118, 196608, 0, 131119, 196608, 0, -327628, 196608, 0, -327627, 196608, 0, -262091, 196608, 0, -262092, 196608, 0, -458723, 196608, 0, -458720, 196608, 0, -458719, 196608, 0, -458708, 196608, 0, -458709, 196608, 0, -458694, 196608, 0, -458693, 196608, 0, -458715, 196608, 0, -458714, 196608, 0, 68, 196608, 0, -65468, 196608, 0, 67, 196608, 0, 38, 196608, 0, 39, 196608, 0, -65498, 196608, 0, -65499, 196608, 0, 37, 196608, 0, 65573, 196608, 0, -65467, 196608, 0, 69, 196608, 0, 196637, 196608, 0, 196638, 196608, 0, 196679, 196608, 0, 196678, 196608, 0, 65593, 196608, 0, 65582, 196608, 0, -262099, 196608, 0, -262083, 196608, 0, -589781, 196608, 0, -524245, 196608, 0, -524244, 196608, 0, -589780, 196608, 0, -524230, 196608, 0, -589766, 196608, 0, -589765, 196608, 0, -524229, 196608, 0, 262195, 196608, 0, 262196, 196608, 0, 524301, 196608, 0, 524302, 196608, 0, 524303, 196608, 0, 524304, 196608, 0, 524305, 196608, 0, 65553, 196608, 0, 17, 196608, 0, -65519, 196608, 0, -131055, 196608, 0, -196591, 196608, 0, -262127, 196608, 0, -327663, 196608, 0, -393199, 196608, 0, -524267, 196608, 0, -786411, 196608, 0, -851947, 196608, 0, -917483, 196608, 0, -458731, 196608, 0, -524271, 196608, 0, -458735, 196608, 0, -524272, 196608, 0, -524273, 196608, 0, -524274, 196608, 0, 524375, 196608, 0, 524374, 196608, 0, 524373, 196608, 0, 524372, 196608, 0, 524371, 196608, 0, 65619, 196608, 0, 83, 196608, 0, -65453, 196608, 0, -130989, 196608, 0, -196525, 196608, 0, -262061, 196608, 0, -327597, 196608, 0, -393133, 196608, 0, -458669, 196608, 0, -524205, 196608, 0, -524204, 196608, 0, -524203, 196608, 0, -524202, 196608, 0, -524209, 196608, 0, -458673, 196608, 0, -851889, 196608, 0, -786353, 196608, 0, -917425, 196608, 0, -262084, 196608, 0, -262085, 196608, 0, -262086, 196608, 0, -262097, 196608, 0, -262098, 196608, 0, -262087, 196608, 0, -196551, 196608, 0, -393164, 196608, 0, -393163, 196608, 0, -524225, 196608, 0, -589762, 196608, 0, -524226, 196608, 0, -458689, 196608, 0, -458688, 196608, 0, -393151, 196608, 0, -393152, 196608, 0, 393309, 196608, 0, 393308, 196608, 0, 393307, 196608, 0, 196698, 196608, 0, 196697, 196608, 0, 196696, 196608, 0, 393223, 196608, 0, 393224, 196608, 0, 393225, 196608, 0, 196618, 196608, 0, 196619, 196608, 0, 196620, 196608, 0, -655361, 196608, 0, -720897, 196608, 0, -786433, 196608, 0, -851969, 196608, 0, -917505, 196608, 0, -983041, 196608, 0, -1048577, 196608, 0, -1114113, 196608, 0, -1179649, 196608, 0, -1245185, 196608, 0, -1310721, 196608, 0, -1376257, 196608, 0, -1441793, 196608, 0, -982939, 196608, 0, -1048475, 196608, 0, -1114011, 196608, 0, -1179547, 196608, 0, -1245083, 196608, 0, -1310619, 196608, 0, -1376155, 196608, 0, -1441691, 196608, 0, -1507227, 196608, 0, -1572763, 196608, 0)

[node name="_Node2D_20130" type="Node2D" parent="TileMap"]
script = ExtResource("1_0anxu")

[node name="Player1" type="CharacterBody2D" parent="." groups=["player"]]
unique_name_in_owner = true
position = Vector2(77, 493)
script = ExtResource("3_djl10")

[node name="_Node2D_20912" type="Node2D" parent="Player1"]
script = ExtResource("1_0anxu")

[node name="PlaceholderBehavior" type="Node2D" parent="Player1"]
script = ExtResource("3_ltwte")
use_sprite = true
sprite_texture = SubResource("ImageTexture_c1vcs")
placeholder_size = Vector2(51, 65)

[node name="PlatformerControllerBehavior" type="Node2D" parent="Player1"]
position = Vector2(54, -84)
script = ExtResource("5_e5nx4")
jump_velocity = 700.0
horizontal_velocity = 800.0

[node name="HealthBarBehavior" type="Node2D" parent="Player1"]
position = Vector2(0, -32)
script = ExtResource("9_2lwuh")
current = 50
progress_gradient = SubResource("Gradient_rcwrg")
metadata/pronto_connections = [SubResource("Resource_rmc47")]

[node name="Camera2D" type="Camera2D" parent="Player1"]
zoom = Vector2(0.5, 0.5)

[node name="_Node2D_22456" type="Node2D" parent="Player1/Camera2D"]
script = ExtResource("1_0anxu")

[node name="CollisionBehavior" type="Node2D" parent="Player1"]
position = Vector2(49.8654, -49.8654)
script = ExtResource("10_suj8j")
metadata/pronto_connections = [SubResource("Resource_3pk7o"), SubResource("Resource_xckuc")]

[node name="_TextureRect_52873" type="TextureRect" parent="Player1/CollisionBehavior"]
material = ExtResource("11_mdex1")
offset_left = -8.0
offset_top = -8.0
offset_right = -8.0
offset_bottom = -8.0
texture = SubResource("ImageTexture_hvlcf")

[node name="Area2D" type="Area2D" parent="Player1"]
position = Vector2(0, -25)

[node name="PlaceholderBehavior" type="Node2D" parent="Player1/Area2D"]
script = ExtResource("3_ltwte")
color = Color(1, 0.0784314, 0.498039, 0.211765)
sprite_texture = ExtResource("14_cx67i")
placeholder_size = Vector2(20, 10)

[node name="AlwaysBehavior" type="Node2D" parent="Player1/Area2D"]
position = Vector2(-40, -1.74846e-06)
script = ExtResource("12_2uwir")
metadata/pronto_connections = [SubResource("Resource_xodg6")]

[node name="Timer" type="Timer" parent="Player1/Area2D"]
one_shot = true
autostart = true

[node name="Player2" type="CharacterBody2D" parent="." groups=["player"]]
unique_name_in_owner = true
position = Vector2(6116, 513)
script = ExtResource("3_djl10")

[node name="_Node2D_65239" type="Node2D" parent="Player2"]
script = ExtResource("1_0anxu")

[node name="_Node2D_20912" type="Node2D" parent="Player2"]
script = ExtResource("1_0anxu")

[node name="PlaceholderBehavior" type="Node2D" parent="Player2"]
script = ExtResource("3_ltwte")
use_sprite = true
sprite_texture = SubResource("ImageTexture_c1vcs")
placeholder_size = Vector2(51, 65)

[node name="PlatformerControllerBehavior" type="Node2D" parent="Player2"]
position = Vector2(54, -84)
script = ExtResource("5_e5nx4")
player = 1
jump_velocity = 700.0
horizontal_velocity = 800.0

[node name="_TextureRect_64698" type="TextureRect" parent="Player2/PlatformerControllerBehavior"]
material = ExtResource("11_mdex1")
offset_left = -8.0
offset_top = -8.0
offset_right = -8.0
offset_bottom = -8.0
texture = SubResource("ImageTexture_6jgov")

[node name="HealthBarBehavior" type="Node2D" parent="Player2"]
position = Vector2(0, -32)
script = ExtResource("9_2lwuh")
current = 50
progress_gradient = SubResource("Gradient_rcwrg")
metadata/pronto_connections = [SubResource("Resource_rmc47")]

[node name="Camera2D" type="Camera2D" parent="Player2"]
zoom = Vector2(0.5, 0.5)

[node name="_Node2D_68727" type="Node2D" parent="Player2/Camera2D"]
script = ExtResource("1_0anxu")

[node name="_Node2D_22456" type="Node2D" parent="Player2/Camera2D"]
script = ExtResource("1_0anxu")

[node name="CollisionBehavior" type="Node2D" parent="Player2"]
position = Vector2(49.8654, -49.8654)
script = ExtResource("10_suj8j")
metadata/pronto_connections = [SubResource("Resource_3pk7o"), SubResource("Resource_dxacu")]

[node name="_TextureRect_64699" type="TextureRect" parent="Player2/CollisionBehavior"]
material = ExtResource("11_mdex1")
offset_left = -8.0
offset_top = -8.0
offset_right = -8.0
offset_bottom = -8.0
texture = SubResource("ImageTexture_6jgov")

[node name="_TextureRect_52873" type="TextureRect" parent="Player2/CollisionBehavior"]
material = ExtResource("11_mdex1")
offset_left = -8.0
offset_top = -8.0
offset_right = -8.0
offset_bottom = -8.0
texture = SubResource("ImageTexture_hvlcf")

[node name="Area2D" type="Area2D" parent="Player2"]
position = Vector2(0, -25)

[node name="PlaceholderBehavior" type="Node2D" parent="Player2/Area2D"]
script = ExtResource("3_ltwte")
color = Color(1, 0.0784314, 0.498039, 0.211765)
sprite_texture = ExtResource("14_cx67i")
placeholder_size = Vector2(20, 10)

[node name="AlwaysBehavior" type="Node2D" parent="Player2/Area2D"]
position = Vector2(-40, -1.74846e-06)
script = ExtResource("12_2uwir")
metadata/pronto_connections = [SubResource("Resource_xodg6")]

[node name="Timer" type="Timer" parent="Player2/Area2D"]
one_shot = true
autostart = true

[node name="Area2D" type="StaticBody2D" parent="."]
position = Vector2(1888, 39)
script = ExtResource("11_4pwkp")

[node name="_Node2D_34616" type="Node2D" parent="Area2D"]
script = ExtResource("1_0anxu")

[node name="PlaceholderBehavior" type="Node2D" parent="Area2D"]
script = ExtResource("3_ltwte")
use_sprite = true
sprite_texture = SubResource("ImageTexture_2awq2")
placeholder_size = Vector2(80, 80)

[node name="SpawnerBehavior" type="Node2D" parent="Area2D"]
position = Vector2(4.94538e-06, -91)
script = ExtResource("12_i5xdw")

[node name="_TextureRect_42796" type="TextureRect" parent="Area2D/SpawnerBehavior"]
material = ExtResource("11_mdex1")
offset_left = -8.0
offset_top = -8.0
offset_right = -8.0
offset_bottom = -8.0
texture = SubResource("ImageTexture_aeu4d")

[node name="RigidBody2D" type="RigidBody2D" parent="Area2D/SpawnerBehavior"]
max_contacts_reported = 5
contact_monitor = true

[node name="_Node2D_43843" type="Node2D" parent="Area2D/SpawnerBehavior/RigidBody2D"]
script = ExtResource("1_0anxu")

[node name="PlaceholderBehavior" type="Node2D" parent="Area2D/SpawnerBehavior/RigidBody2D"]
script = ExtResource("3_ltwte")
use_sprite = true
sprite_texture = SubResource("ImageTexture_oxx44")
placeholder_size = Vector2(60, 60)

[node name="AlwaysBehavior" type="Node2D" parent="Area2D/SpawnerBehavior/RigidBody2D"]
position = Vector2(-30, -30)
script = ExtResource("12_2uwir")
metadata/pronto_connections = [SubResource("Resource_m1nrh"), SubResource("Resource_btlro")]

[node name="GroupDrawer" parent="Area2D/SpawnerBehavior" instance=ExtResource("13_cp8el")]

[node name="_Node2D_42797" type="Node2D" parent="Area2D/SpawnerBehavior/GroupDrawer"]
position = Vector2(-115, -4)

[node name="_Node2D_42798" type="Node2D" parent="Area2D/SpawnerBehavior/GroupDrawer"]
position = Vector2(107, -4)

[node name="Area2D2" type="Area2D" parent="."]
position = Vector2(4278, 1235)

[node name="PlaceholderBehavior" type="Node2D" parent="Area2D2"]
script = ExtResource("3_ltwte")
color = Color(1, 1, 1, 0.0784314)
sprite_texture = ExtResource("14_cx67i")
placeholder_size = Vector2(20000, 200)

[node name="CollisionBehavior" type="Node2D" parent="Area2D2"]
position = Vector2(-3892, -470)
script = ExtResource("10_suj8j")
metadata/pronto_connections = [SubResource("Resource_fyp7b"), SubResource("Resource_j8tfr")]

[node name="PlayerDamage" type="Node2D" parent="."]
position = Vector2(576, 324)
script = ExtResource("6_pgotb")
float_min = 0.0
float_max = 100.0
float_value = 50.0
float_step_size = 1.0

[node name="Area2D3" type="StaticBody2D" parent="."]
position = Vector2(4582, 34)
script = ExtResource("11_4pwkp")

[node name="_Node2D_34616" type="Node2D" parent="Area2D3"]
script = ExtResource("1_0anxu")

[node name="PlaceholderBehavior" type="Node2D" parent="Area2D3"]
script = ExtResource("3_ltwte")
use_sprite = true
sprite_texture = SubResource("ImageTexture_2awq2")
placeholder_size = Vector2(80, 80)

[node name="SpawnerBehavior" type="Node2D" parent="Area2D3"]
position = Vector2(4.94538e-06, -91)
script = ExtResource("12_i5xdw")

[node name="_TextureRect_42796" type="TextureRect" parent="Area2D3/SpawnerBehavior"]
material = ExtResource("11_mdex1")
offset_left = -8.0
offset_top = -8.0
offset_right = -8.0
offset_bottom = -8.0
texture = SubResource("ImageTexture_aeu4d")

[node name="RigidBody2D" type="RigidBody2D" parent="Area2D3/SpawnerBehavior"]
position = Vector2(277, 231)
max_contacts_reported = 5
contact_monitor = true

[node name="_Node2D_43843" type="Node2D" parent="Area2D3/SpawnerBehavior/RigidBody2D"]
script = ExtResource("1_0anxu")

[node name="PlaceholderBehavior" type="Node2D" parent="Area2D3/SpawnerBehavior/RigidBody2D"]
script = ExtResource("3_ltwte")
use_sprite = true
sprite_texture = SubResource("ImageTexture_oxx44")
placeholder_size = Vector2(60, 60)

[node name="AlwaysBehavior" type="Node2D" parent="Area2D3/SpawnerBehavior/RigidBody2D"]
position = Vector2(-30, -30)
script = ExtResource("12_2uwir")
metadata/pronto_connections = [SubResource("Resource_m1nrh"), SubResource("Resource_btlro")]

[node name="GroupDrawer" parent="Area2D3/SpawnerBehavior" instance=ExtResource("13_cp8el")]
position = Vector2(1000, 0)

[node name="_Node2D_42797" type="Node2D" parent="Area2D3/SpawnerBehavior/GroupDrawer"]
position = Vector2(-115, -4)

[node name="_Node2D_42798" type="Node2D" parent="Area2D3/SpawnerBehavior/GroupDrawer"]
position = Vector2(107, -4)
